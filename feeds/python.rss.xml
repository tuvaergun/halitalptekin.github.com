<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>{ Halit Alptekin }</title><link>http://www.halitalptekin.com/</link><description></description><atom:link href="http://www.halitalptekin.com/feeds/python.rss.xml" rel="self"></atom:link><lastBuildDate>Sat, 24 Nov 2012 00:00:00 +0200</lastBuildDate><item><title>Pelican İle Static Dünyası</title><link>http://www.halitalptekin.com/pelican-ile-static-dunyasi.html</link><description>&lt;p&gt;Bir süredir aklımda olan sitemi &lt;strong&gt;Pelican&lt;/strong&gt;'a dönüştürme fikrini sonunda yapabildim. Ancak bu dönüştürme işleminde &lt;strong&gt;Django&lt;/strong&gt; gibi çok sevdiğim bir sistemi bırakmakda çok kolay olmadı. Aslında buna tam olarak bırakmak denmez. Sadece bir süre ara veriyorum. Çünkü şu anda okuldaki derslerimin sıklaşmasıyla siteme pek vakit ayıramıyordum. Bu yüzden de bir süre &lt;strong&gt;Django-Python&lt;/strong&gt; siteme ara verip yola &lt;strong&gt;Pelican&lt;/strong&gt; ile devam etmek istedim. Yaza doğru tekrardan hatta daha iyi bir şekilde dönüş yapmayı planlıyorum.&lt;/p&gt;
&lt;p&gt;Biraz da &lt;strong&gt;Django&lt;/strong&gt;'dan &lt;strong&gt;Pelican&lt;/strong&gt;'a dönüşüm kısmında yaptıklarımdan bahsedeyim.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Django sitemde yer alan tüm yazıları markdown'a dönüştürme işlemi öncesi hafif bir çıktı haline getirdim.&lt;/li&gt;
&lt;li&gt;Tüm içeriği &lt;strong&gt;markdown&lt;/strong&gt;'a dönüştürdüm.&lt;/li&gt;
&lt;li&gt;Dönüştürme işleminden sonra &lt;strong&gt;deasciify&lt;/strong&gt; problemi ile karşılaştım ve bunun da çözümünü ufak bir araç ile buldum.&lt;/li&gt;
&lt;li&gt;Bazı yazılarda yer alan kod bloğundaki problemleri &lt;strong&gt;pygments&lt;/strong&gt; üzerindeki değişiklikler ile hallettim.&lt;/li&gt;
&lt;li&gt;Site haritası ve birkaç ufak özellik ekledim.&lt;/li&gt;
&lt;li&gt;Deploy aşamasında &lt;strong&gt;fabric&lt;/strong&gt; aracını kullandım.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Yaşadığım problemleri ve aşamaları tek bir yazıda anlatmak yerine farklı birkaç yazıda anlatmayı düşünüyorum. Hatta bu yazılarından bazılarının ingilizce versiyonlarını da eklemeyi planlıyorum.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pelican ile static dunyasi" src="media/pelican-ile-static-dunyasi.png" /&gt;&lt;/p&gt;
&lt;p&gt;Django'dan statik sisteme geçiş sırasında eski yazılarımda bazı linklerin bozuk olması, resimlerin gözükmemesi gibi problemler ortaya çıkabilir. Ben değer verdiğim ve önemli olduklarını düşündüğüm tüm yazıları yeniden gözden geçireceğim.&lt;/p&gt;
&lt;p&gt;Tabi Pelican'a geçişin yanında sitemin bir süredir kapalı olma durumuda var. Bunun sebebi serverı aldığım firmanın tüm dosyalarım ile birlikte sitemi farklı bir ipye taşımasıydı. Ben de zaten Pelican'a geçmek için bir bahane arıyordum. Bu olay ile birlikte ilk kurşunu attım ve deploy kısmını hallettim.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">halit</dc:creator><pubDate>Sat, 24 Nov 2012 00:00:00 +0200</pubDate><guid>tag:www.halitalptekin.com,2012-11-24:pelican-ile-static-dunyasi.html</guid><category>pelican</category><category>python</category><category>static blog</category><category>github</category></item><item><title>Python Fuzzy Modülü</title><link>http://www.halitalptekin.com/python-fuzzy-modulu.html</link><description>&lt;p&gt;İlk defa Yaşar Arabacı'nın blogunda okuduğum benzer yazı algoritmaları bana çok ilginç gelmişti. Çunku kuçuk kelimelerde veya cumlelerde kelimeleri parçalayıp oranlamak işe yarardı ancak boyutlar buyuyunce bu imkansızlaşmaya başladı. Paragrafları cumlelere, cumleleri kelimelere ayırdıktan sonra kelime bazlı kontrolde çok saçmaydı. Bu yuzden biraz daha farklı algoritma arayışlarına girdim. Bana bu konuda ilginç gelen ise kelimeleri fonetik olarak karşılaştıran algoritmalardı.&lt;/p&gt;
&lt;p&gt;Benim okuduğum yazıda 3 tane algoritmadan bahsediyordu. Sayısının benim açımdan bir onemi yok. En azından yazıların benzerliklerini fonetik olarak karşılaştırmanın daha doğru sonuçlar verdiğinin farkına vardım.&lt;/p&gt;
&lt;p&gt;Her gun girdiğimiz google'da bazen yazdığımız kelimelerde google hep "Bunu mu demek istediniz?" diye duzeltiyor. İşte burada kullandığı algoritmanında bunlardan birisi olabileceğine vardım. Eğer değilse bile benzer olabilirler.&lt;/p&gt;
&lt;p&gt;İşte bende bu algoritmaları Python'da deneyip kullanmak istedim. Bunun için en uygun kutuphane Fuzzy. Bilgisayarınıza yuklemek için aşağıdaki komutu yazmanız yeterli.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;Fuzzy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Daha sonra da direk olarak import edip kullanalım. Önce soundex algoritmasına bakalım.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;fuzzy&lt;/span&gt;

&lt;span class="n"&gt;isimler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;halit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;halil&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;haim&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;hain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;soundex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fuzzy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Soundex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;isimler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%-10s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;soundex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Bunun çıktısı aşağıdaki gibi oluyor.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;halit&lt;/span&gt;      &lt;span class="n"&gt;H430&lt;/span&gt;
&lt;span class="n"&gt;halil&lt;/span&gt;      &lt;span class="n"&gt;H400&lt;/span&gt;
&lt;span class="n"&gt;haim&lt;/span&gt;       &lt;span class="n"&gt;H500&lt;/span&gt;
&lt;span class="n"&gt;hain&lt;/span&gt;       &lt;span class="n"&gt;H500&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Gorduğunuz gibi gayet başarılı sonuçlar çıkarıyor. Sizde soundex geçen kısmı DMetaphone veya nysiis ile değiştirip diğer algoritmaların çıktılarına bakabilirsiniz. Ben buradan sonra Soundex algoritmasını kullanarak birkaç uygulama yaptım. Neden soundex derseniz çok iyi sonuçlar verdiği için değil de daha kolay kullanım sağladığı için seçtim. Diğerlerinde donuş değerleri liste olarak gelebiliyor. Buda gelen verilerde tekrardan işlem yapmak demek.&lt;/p&gt;
&lt;p&gt;İşte bende bu algoritmayı belirttiğim bir db içinde kelime arama şeklinde kullandım. Kodlar uzerinde çok fazla uğraşmadığım için fazla gereksiz kod olabilir. Ancak mantığın kavranması ve basit işler için yeterlidir diye duşunuyorum. Benim bu algoritmayı kullanarak yazdığım kod aşağıdaki gibi.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fuzzy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Soundex&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;aramaYap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;veritabani&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arancak&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;veritabani&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;veritabani&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arancaklar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arancak&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;soundex&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Soundex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sonuclar&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;liste&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;ksozluk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;eleman&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;liste&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;lis&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
            &lt;span class="n"&gt;dlis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
            &lt;span class="n"&gt;lis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eleman&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;dlis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eleman&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;lis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dlis&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;ksozluk&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lis&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ksozluk&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;arama&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;veritabani&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;veritabani&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;veritabani&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;kelimem&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;veritabani&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;arancak&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arancaklar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;soundex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kelimem&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;soundex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arancak&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sonuclar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;veritabani&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sonuclar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;veritabani&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sonuclar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Şimdi de bunu gerçek bir ornekte kullanalım.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;aramam&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;aramaYap&lt;/span&gt;

&lt;span class="n"&gt;veritabani&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Python Yol Haritasi&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s"&gt;&amp;quot;Ucretsiz CouchDB&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s"&gt;&amp;quot;ENC28J60 ve Arduino&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s"&gt;&amp;quot;Facebooku Proxy Olarak Kullanma&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s"&gt;&amp;quot;schweinsteiger&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s"&gt;&amp;quot;python programlama&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s"&gt;&amp;quot;halit alptekin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;aranacak&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;raw_input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Aranacak kelime: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;arama&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;aramaYap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;veritabani&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;aranacak&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;sonuc&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;arama&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arama&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;. ihtimal = &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sonuc&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Veritabanındaki değerlerimize aşağıdaki gibi sorgular gonderdim ve gelen sonuçlar aşağıda.( Veritabanı olarak basit bir liste kullandım. Siz bunu gerçek bir veritabanı uzerinde de kullanabilirsiniz. Bunun için &lt;a href="http://www.informit.com/articles/article.aspx?p=1848528"&gt;buradaki&lt;/a&gt; yazıya bakmanız yeterlidir. Ayrıcana benim kullanmadığım diye 2 algoritmanın da kullanımı burada var.)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.halitalptekin.com/media/upload/python-fuzzy-search-algorithm.png"&gt;&lt;img alt="Python Fuzzy Fonetic Search Algorithm" src="http://www.halitalptekin.com/media/upload/python-fuzzy-search-algorithm.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Feysbuk aramasında bile başarılı bir sonuç veriyor :D Yazdığım kodlarda ne yapmak istediğime gelirsek; veritabanındaki oğeleri sırayla kelimelere ayırıyorum. Daha sonra bu ayırdığım kelimeler ile aranacak olan kelimeyi yukarıdaki algoritmayı kullanarak karşılaştırıyorum. Şimdilik sadece değerleri eşit olanları sonuç olarak donduruyor. Belki ileride yakın değerlere sahip olanları da dondururse guzel bir algoritma olur.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">halit</dc:creator><pubDate>Sun, 16 Sep 2012 00:00:00 +0300</pubDate><guid>tag:www.halitalptekin.com,2012-09-16:python-fuzzy-modulu.html</guid><category>arama algoritmaları</category><category>fuzzy</category><category>python</category><category>python arama</category></item><item><title>Scrapy İle Arama Motoru</title><link>http://www.halitalptekin.com/scrapy-ile-arama-motoru.html</link><description>&lt;p&gt;Bloglar ve siteler olduğundan beri bir siteden diğerine veri çekmek her zaman programcılar için onemli oldu. Kimi zaman sitelerin webmasterlar için verdiği araçları kullandık kimi zaman da kendimiz yazmak zorunda kaldık. Tabi zaman ilerleryince arama motoru tarafında da gelişmeler hızla ilerledi. Ciddi derece iyi motorlar ve botlar yazıldı. Ben PHP ile yazdığım sitemi Python ile yazdığım şu anki haline taşırken kesinlikle MySql to PostgreSql veya benzeri yazılımlar kullanmadım. Çunku PHP blogumda herşey karşık ve dağınıktı.&lt;/p&gt;
&lt;p&gt;Şimdi ise Django bir hayli duzenli. Bu yuzden donuşturmek yerine direk olarak sayfadan verileri almam gerektiği duşundum. Boylece en başta bahsettiğim botlar dunyasına bakmam gerekti. Ben bu botlardan zamanında pek de haberdar değildim. Bu yuzden Python ile birkaç spagetti kod ile urllib, urllib2 ve for, while dongulerini kullanarak tum yazılarımı etiketlerimi çektim.&lt;/p&gt;
&lt;p&gt;Ama aklıda hep bu işi profesyonel olarak yazılmış bir botla yapmak vardı. Biraz araştırınca Python ile ScraPy adında harika bir arama motoru ile karşılaştım. Bununla takip etmesini istediğim sayfaları regex ile belirtip aynı şekilde veri almasını istediklerimi de ayrı ayrı belirtiyoruz.&lt;/p&gt;
&lt;p&gt;Öncelikle ScraPy'yi bi bilgisayarımıza kuralım.Bunun için klasik olarak aşağıdaki komutu kullanıyoruz.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;scrapy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Daha sonra sanal ortamımızda aşağıdaki komut ile klasorlerimiz oluşturuyoruz.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;scrapy&lt;/span&gt; &lt;span class="n"&gt;startproject&lt;/span&gt; &lt;span class="n"&gt;orumcek&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Bu komutu verdiğimizde aşağıdaki gorunumde bir dizin elde etmeniz gerekli.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;orumcek&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
    &lt;span class="n"&gt;scrapy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cfg&lt;/span&gt;
    &lt;span class="n"&gt;orumcek&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
        &lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
        &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
        &lt;span class="n"&gt;pipelines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
        &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
        &lt;span class="n"&gt;spiders&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
            &lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Bu dosyaların gorevlerine bakacak olursak:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;scrapy.cfg: &lt;/strong&gt;ayar dosyamız&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;orumcek/:&lt;/strong&gt; proje klasorumuz&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;orumcek/items.py:&lt;/strong&gt; projemize ait oğeler burada&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;orumcek/pipelines.py:&lt;/strong&gt; projemizdeki verileri bu dosya sayesinde paylaştıracağız&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;orumcek/settings.py: &lt;/strong&gt;projemize ait ayarlar&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;orumcek/spiders/:&lt;/strong&gt; orumceklerimiz bu klasor altında yer alacak&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Şimdi herşeyimiz hazır olduğuna gore ilk kodlarımızı yazabiliriz.Öncelikle bize gerekli olan kısımları soyleyim. &lt;strong&gt;items.py &lt;/strong&gt;içinde hangi verileri çekeceğimizi tanımlayacağız. Benim tanımladığım ornek dosya aşağıda.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scrapy.item&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Field&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OrumcekItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c"&gt;#post        = Field()&lt;/span&gt;
    &lt;span class="n"&gt;date&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Bu dosyanının gorevini anlamış olmalısınız.Çekeceğimiz verilerin title, description ve date olacağını tanımlıyoruz.(Şimdilik post'u çekmiyorum. Eğer başındaki # işaretini kaldırırsanız onu da çekebilirsiniz. Ancak çok fazla kargaşa yarattığı için şimdilik gerek yok. Siz isteğinize gore ekleyebilirsiniz.)&lt;/p&gt;
&lt;p&gt;Şimdi de onemli kısma gelelim. Burada orumceğimizi yazacağız. Bunun için oncelikle spiders/ klasorunun altına bir python dosyası oluşturuyoruz. Ben ismini &lt;strong&gt;hd_spider.py&lt;/strong&gt; koydum. Ve içeriğini aşağıdaki gibi yapıyoruz.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scrapy.contrib.spiders&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CrawlSpider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Rule&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scrapy.contrib.linkextractors.sgml&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SgmlLinkExtractor&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scrapy.selector&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HtmlXPathSelector&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;orumcek.items&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OrumcekItem&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OrumcekSpider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CrawlSpider&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;orumcek&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;start_urls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://www.halitalptekin.com/blog/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Rule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SgmlLinkExtractor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;allow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;\?page=\d+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="n"&gt;follow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
             &lt;span class="n"&gt;Rule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SgmlLinkExtractor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;allow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;\w+.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;parse_blogpost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parse_blog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;hxs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HtmlXPathSelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OrumcekItem&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hxs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//div[@class=&amp;#39;span9&amp;#39;]/h1/a/text()&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extract&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;description&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hxs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//div[@class=&amp;#39;span9&amp;#39;]/p[@class=&amp;#39;lead&amp;#39;]/text()&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extract&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hxs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//div[@class=&amp;#39;span9&amp;#39;]/h1/small/text()&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extract&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="c"&gt;#item[&amp;#39;post&amp;#39;]        = hxs.select(&amp;quot;//div[@class=&amp;#39;span9&amp;#39;]/p/text()&amp;quot;).extract()&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Kodumuzda ilk olarak isim ve taramanın başlanacağı linki ekliyoruz. Bu link başlangıç noktası olarak alınacak ve daha sonra gelen kurallara gore takip edilecek. Kurallar içinde regex kullandığımı gorebilirsiniz. Burada dikkat etmeniz gereken nokta eğer takip etmesini istediğin linkler varsa bunlara &lt;strong&gt;follow=True &lt;/strong&gt;kuralını ekliyoruz. Veri çekmesini istediklerimizde de o sayfayı parse edecek fonksiyonumuzu çağırıyoruz.&lt;/p&gt;
&lt;p&gt;Yukarıdaki kodun Turkçesi; http://www.halitalptekin.com/blog/ linkine gir ve &lt;strong&gt;?page=sayi&lt;/strong&gt; olan tum sayfalarda gez(?page=1, ?page=2) .Eğer içlerinde &lt;strong&gt;\w+.html&lt;/strong&gt; kuralına uyan(sonu .html ile biten) sayfalar varsa bunları &lt;strong&gt;parse_blog&lt;/strong&gt; fonksiyonuna gonder.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;parse_blog&lt;/strong&gt; fonksiyonuna gelen sayfalarda da oğelerimizi xpath kurallarına gore çekiyoruz. Mesela ben item isimli oğemizin &lt;strong&gt;span9&lt;/strong&gt; ve sırayla &lt;strong&gt;h1&lt;/strong&gt;, &lt;strong&gt;a&lt;/strong&gt; etiketleri altındaki metin olduğunu belirtmişim.Burada sizin &lt;strong&gt;xpath&lt;/strong&gt; bilginizi konuşturmanız gerekli.Zaten çok da zor bir durum yok.&lt;/p&gt;
&lt;p&gt;Bundan sonra aşağıdaki komutu çalıştırarak deneme yapabilirsiniz. Gelen değerler istediğiniz şekilde değilse duzeltmeleri kendinize gore yapın.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;scrapy&lt;/span&gt; &lt;span class="n"&gt;crawl&lt;/span&gt; &lt;span class="n"&gt;orumcek&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ve şimdi de bu aldığımız verileri bir çıktı haline getirelim. Siz isterseniz xml, feed, json, txt veya direk veritabanına ekleme yapabilirsiniz. Ben json olarak çıktı alacağım. Bunun için &lt;strong&gt;pipelines.py&lt;/strong&gt; dosyamıza aşağıdaki satırları ekliyoruz.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;JsonWriterPipeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;items.json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spider&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Bu kod ile gelen itemleri json dosyamıza serialize ediyoruz. Siz isterseniz bu kısımda bilginizi konuşturarak verileri mongodb, mysql veya xml şeklinde de alabilirsiniz. Burada yapmanız gerekenler &lt;a href="http://doc.scrapy.org/en/0.14/index.html"&gt;sitesinde&lt;/a&gt; ayrıntılı anlatılmış.&lt;/p&gt;
&lt;p&gt;Daha sonra bu boru hattımızı ayar dosyamıza ekliyoruz. Bunun için settings.py içine aşağıdaki satırı ekliyoruz.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;ITEM_PIPELINES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;orumcek.pipelines.JsonWriterPipeline&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Artık herşey hazır. Gene yukarıdaki komutuzu girerek aynı dizinde json dosyamızın oluştuğunu gorebilirsiniz.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python Web Crawler Spider" src="http://www.halitalptekin.com/media/upload/python-web-crawler-spider.png" /&gt;&lt;/p&gt;
&lt;p&gt;Ben verileri alırken direk olarak yazılarımı çekmedim. Bunun sebebi Turkçe karakterlerin ascii olarak gelmesi. Bunun çozumu bir hayli basit ancak gene de goz karmaşasına yol açıyor. Github &lt;a href="https://github.com/halitalptekin/MyCodeBook/blob/master/orumcek/items1.json"&gt;depoma&lt;/a&gt; koyduğum json dosyama bakarak ascii karakterleri gayet guzel donuşturduğumu gorebilirsiniz.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">halit</dc:creator><pubDate>Thu, 13 Sep 2012 00:00:00 +0300</pubDate><guid>tag:www.halitalptekin.com,2012-09-13:scrapy-ile-arama-motoru.html</guid><category>python</category><category>python bot</category><category>python spider</category><category>python web crawler</category><category>scrapy</category></item><item><title>Matplotlib İle Gmail Analizi</title><link>http://www.halitalptekin.com/matplotlib-ile-gmail-analizi.html</link><description>&lt;p&gt;Python'un son gunlerde çok fazla kullanılmaya başladığı alanlardan birisi de kuşkusuz bilimsel araştırmalar oldu.Marsa gonderilen Curiosity'nin bile test kısımları Python ile yapılmıştı.Ben de bu yuzden onceden beri ilgili olduğum bu alana şoyle bir bakayım dedim.Kutuphaneler ile uğraştığımdan kendimi bir kaç çizim kutuphanesi aradım.Geçen yazımda gosterdiğim gibi Turtle adında bir tane bulmuştum.Ancak onun ile bilimsel araştırma duzeyinde ciddi proje yapmak pek mumkun değil.Sadece algoritma duzeyinizin gelişmesinde rol oynabilir.Ben biraz daha matlab'a yakın bir kutuphane arıyordum ve matplotlibi buldum.Adı bana matlabı andırıyor.Hatta syntaxı bile matlab'dan Python'a geçeceklerin rahat alışması için benzer yapılmış.&lt;/p&gt;
&lt;p&gt;Bende bu kutuphane ile uğraşırken guzel bir kod parçası buldum ve bunu kendime gore biraz değiştirdim.Bu kod ile gmail adresinize gelen mailleri zamanlara gore kıyaslayıp guzel bir grafik elde edebiliyorsunuz.En azından guzel bir çizim aracı arayanlar için ornek olabilir.Kod aşağıdaki gibi.Benim mail adresime ait ornek çıktılar da hemen alt tarafta.&lt;/p&gt;
&lt;p&gt;Kodun yaptığı işe gelirsen oncelikle gmail adresimizden maillerin başlık kısımlarını alıyor ve daha sonra bunları çeşitli zamanlarda gelen mailler olarak donduruyor.İlk 2 fonksiyon bu işe yarıyor.Son fonksiyonda matplotlib kutuphanesi ile gelen verileri ekrana basıyor.Aşağıdaki kod ile son 5 yıla ait gelen maillerinizin grafiğini çizdirebilirsiniz.Eğer giden maillerinize bakmak isterseniz alt kısımda yer alan inbox ismini sent yapmanız yeterlidir.&lt;/p&gt;
&lt;p&gt;Aşağıdaki kodu çalıştırmak için sadece mail adresiniz ve şifrenizi girmeniz yeterlidir.Ayrıcana ben gmail kullandım diye sizde onu kullanmak zorunda değilsiniz.İlk fonksiyonda değişiklik yaparak diğer sunucularda da kullanılabilir hale getirebilirsiniz.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;imaplib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;IMAP4_SSL&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;mktime&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;email.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;parsedate&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pylab&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;plot_date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xticks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;date2num&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pylab&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hist&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num2date&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.dates&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DateFormatter&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getHeaders&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; retrieve the headers of the emails&lt;/span&gt;
&lt;span class="sd"&gt;        from d days ago until now &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="c"&gt;# imap connection&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;IMAP4_SSL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;imap.gmail.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;# retrieving the uids&lt;/span&gt;
    &lt;span class="n"&gt;interval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;-%b-%Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;search&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="s"&gt;&amp;#39;(SENTSINCE {date})&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="c"&gt;# retrieving the headers&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;fetch&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                            &lt;span class="s"&gt;&amp;#39;(BODY[HEADER.FIELDS (DATE)])&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;diurnalPlot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;xday&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;ytime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mktime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parsedate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
            &lt;span class="n"&gt;mailstamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromtimestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;xday&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mailstamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="c"&gt;# Time the email is arrived&lt;/span&gt;
            &lt;span class="c"&gt;# Note that years, month and day are not important here.&lt;/span&gt;
            &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                         &lt;span class="n"&gt;mailstamp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hour&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mailstamp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;minute&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mailstamp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;ytime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;plot_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xday&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ytime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xticks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rotation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;xday&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ytime&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dailyDistributioPlot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ytime&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; draw the histogram of the daily distribution &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="c"&gt;# converting dates to numbers&lt;/span&gt;
    &lt;span class="n"&gt;numtime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;date2num&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ytime&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="c"&gt;# plotting the histogram&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gca&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;patches&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numtime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bins&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;# adding the labels for the x axis&lt;/span&gt;
    &lt;span class="n"&gt;tks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;num2date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_x&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;patches&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;xticks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rotation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;# formatting the dates on the x axis&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xaxis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_major_formatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DateFormatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%H:%M&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Fetching emails...&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getHeaders&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;info@halitalptekin.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="s"&gt;&amp;#39;mailsifrem&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;inbox&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;365&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Plotting some statistics...&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;xday&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ytime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;diurnalPlot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;dailyDistributioPlot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ytime&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xday&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Emails analysed.&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ben baya mail silmeme rağmen toplam 2035 mailimi inceledi.Ve sonuçları da çok kısa bir sure içerisinde gosterdi.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python Gmail Matplotlib" src="http://www.halitalptekin.com/media/upload/python-gmail-matplotlib-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python Gmail Matplotlib 2" src="http://www.halitalptekin.com/media/upload/python-gmail-matplotlib-1.png" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">halit</dc:creator><pubDate>Wed, 12 Sep 2012 00:00:00 +0300</pubDate><guid>tag:www.halitalptekin.com,2012-09-12:matplotlib-ile-gmail-analizi.html</guid><category>matlab</category><category>matplotlib</category><category>python</category><category>python matlab</category><category>python matplotlib</category></item><item><title>Python Turtle Modülü</title><link>http://www.halitalptekin.com/python-turtle-modulu.html</link><description>&lt;p&gt;Son gunlerde Python ile birlikte gelen modullere daha yakından bakıyorum. Aralarında bazen çok guzel araçlar çıkabiliyor. Mesela benim bugun gostermek istediğim Turtle modulunu daha once hiç gormemiştim. Eminim birçok kişi de bu kutuphaneden habersizdir. Python ile birlikte gelen Turtle modulu ile ekrana istediğiniz yazıyı yazmanızdan tutunda birçok resim ve şekil çizebilirsiniz. Ayrıcana bu modul algoritma kurma mantığını geliştirmekte de onemli bir yere sahip. Yani eğlenirken oğretici de olabiliyor.&lt;/p&gt;
&lt;p&gt;Bu modulu kullanmanız için fazladan bir modul yuklemenize gerek yok. Python'un bilgisayarınızda kurulu olması yeterli.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;turtle&lt;/span&gt;

&lt;span class="n"&gt;kaplumbagam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Turtle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c"&gt;# ornekliyoruz&lt;/span&gt;
&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# 50 derece cember ciziyoruz&lt;/span&gt;
&lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getscreen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_root&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c"&gt;# cemberi ekranda tutuyoruz&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ekrana bir daire çizmek ve bunu ekranda tutmak bu kadar basit. Bu kodu çalıştırdığımızda aşağıdaki gibi bir gorunum elde edeceksiniz.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python Turtle Graphics" src="http://www.halitalptekin.com/media/upload/python-turtle-lib.png" /&gt;&lt;/p&gt;
&lt;p&gt;Mesela burada ekrana daireyi çizen ok yerine uçgen kare veya kaplumbağa kullanabiliriz.Bunun için ilk orneklememizi yaptığımız satırda shape isminde tanımlama yapıyoruz.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;turtle&lt;/span&gt;

&lt;span class="n"&gt;kaplumbagam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Turtle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;turtle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# ornekliyoruz&lt;/span&gt;
&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# 50 derece cember ciziyoruz&lt;/span&gt;
&lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getscreen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_root&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c"&gt;# cemberi ekranda tutuyoruz&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ve kodumuzu çalıştırdığımızda şirin kaplumbağımız ekrana dairemizi çiziyor. Shape kısmında &lt;strong&gt;arrow&lt;/strong&gt;, &lt;strong&gt;turtle&lt;/strong&gt;, &lt;strong&gt;circle&lt;/strong&gt;, &lt;strong&gt;square&lt;/strong&gt;, &lt;strong&gt;triangle&lt;/strong&gt;, &lt;strong&gt;classic&lt;/strong&gt; gibi değerleri kullanabilirsiniz.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python Turtle Graphics Shape" src="http://www.halitalptekin.com/media/upload/python-turtle-lib-shape.png" /&gt;&lt;/p&gt;
&lt;p&gt;Şimdi de yukarıdaki kodumuzu birazcık geliştirip olimpiyat sembolu yapalım.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;turtle&lt;/span&gt;

&lt;span class="n"&gt;kaplumbagam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Turtle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;turtle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;penup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setposition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pendown&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;penup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setposition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pendown&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;penup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setposition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pendown&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;penup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setposition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pendown&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;kaplumbagam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getscreen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_root&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Kodlara baktığınızda olayın ne kadar da basit olduğunu anlamışsınızdır umarım. Basitçe once kalemi kaldırıyoruz, istediğimiz pozisyona getiriyoruz, daha sonra kalemi indirip 50 derece dairemizi çiziyoruz.Ve aşağıdaki gorunum ortaya çıkıyor.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python Turtle Graphics Olympic Symbol" src="http://www.halitalptekin.com/media/upload/python-turtle-olympic-symbol.png" /&gt;&lt;/p&gt;
&lt;p&gt;Ve şimdi de bu kodumuzu biraz daha cancanlı hale getirip bir sınıf yapalım.Bu sınıf içerisinde hem daire çizecek hemde olimpiyat sembolunu oluşturacak bir fonksiyonumuz olsun.Bir de ekrana yazı yazacak fonksiyon ekleyelim.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;turtle&lt;/span&gt;

&lt;span class="c"&gt;########################################################################&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Kaplumbagam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Turtle&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="c"&gt;#----------------------------------------------------------------------&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Turtle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;turtle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Screen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bgcolor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;lightgrey&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pensize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;#----------------------------------------------------------------------&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;daireCiz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;renk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;derece&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;penup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setposition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pendown&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;renk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;derece&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;#----------------------------------------------------------------------&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;olimpiyatSemboluCiz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;positions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;purple&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;renk&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;positions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;daireCiz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;renk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yaziYaz&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c"&gt;#----------------------------------------------------------------------&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;yaziYaz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;penup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setposition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setheading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pendown&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Londra 2012&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Arial&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;bold&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Kaplumbagam&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;olimpiyatSemboluCiz&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getscreen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_root&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Kodlarımıza baktığınızda zaten ne yapmak istediğimi çok rahat anlayabilirsiniz.  &lt;strong&gt;init&lt;/strong&gt; kısmında once gerekli orneklemelerimiz yaptık ve shape olarak kaplumbağa atadık.Arkaplan rengini açık kahverengi yapıp kalemin boyutunu 3'e getirdik. Daha sonra da gerekli fonksiyonlarımızı tanımladık. Kodumuzu çalıştırdığımız da aşağıdaki gibi bir gorunum elde etmeniz lazım.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python Turtle Olympic Symbol Shape" src="http://www.halitalptekin.com/media/upload/python-turtle-olympic-symbol-shape.png" /&gt;&lt;/p&gt;
&lt;p&gt;İnternette araştırma yaptığımda bazı yerlerde Turtle ile çok guzel çalışmalar yapılmış.Onlardan birkaç ornek vereyim.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python Turtle" src="https://github.com/downloads/ecylmz/file/askin_1.gif" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python Turtle" src="https://github.com/downloads/ecylmz/file/askin_2.gif" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python Turtle" src="https://github.com/downloads/ecylmz/file/cagatay_1.gif" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python Turtle" src="https://github.com/downloads/ecylmz/file/talha_1.gif" /&gt;&lt;/p&gt;
&lt;p&gt;Hepsinin kodlarına &lt;a href="https://github.com/19ceng/ceng104pro/wiki/Turtle"&gt;buradaki&lt;/a&gt; sayfadan ulaşabilirsiniz.&lt;/p&gt;
&lt;p&gt;Kısacası Turtle kutuphanesi çok eğlenceli ve eğitici bir oneme sahip. Özellikle Python'a yeni başlayanların Python'a ısınması için kullanılabilir.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">halit</dc:creator><pubDate>Wed, 12 Sep 2012 00:00:00 +0300</pubDate><guid>tag:www.halitalptekin.com,2012-09-12:python-turtle-modulu.html</guid><category>python</category><category>python kütüphanesi</category><category>python turtle</category><category>python turtle lib</category></item><item><title>Python Ve Couchdb</title><link>http://www.halitalptekin.com/python-ve-couchdb.html</link><description>&lt;p&gt;NoSQL veritabanı platformları son zamanlar gittikçe daha fazla ilgimi çekmeye başladı.Çunku artık MySql gibi veritabanları eskisi gibi yeterli gelmiyor.Yuksek veri girişlerinde veya çok fazla verinin olduğu veritabanlarında kasılmalar, şişmeler, donmalar gibi birçok sorun çıkarıyorlar.Bunların yanında hız olarak da bir zaman sonra insana gerçekten yeterli gelmiyor.Ben kişisel sitemi kodlarken aklımda hep hızlı bir db kullanma fikri vardı.Çunku MySql ile çok fazla problem yaşamıştım.Ve tekrardan yaşamak istemiyordum.Bu yuzden PostgreSQL'i denemek için seçtim.Şu anda işimi çok fazla goruyor.Ama bunu sadece denemek için yaptım ve aklımda yatan asıl fikir nosql platformlardan birisini kullanmak.Bu platformların başında MongoDB ile CouchDB geliyor.Ben bu yazımda CouchDB'yi python veya django uygulamalarınızda nasıl basitçe kullanacağınızı gostereceğim.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python Django NoSql CouchDb" src="http://www.halitalptekin.com/media/upload/nosql.png" /&gt;&lt;/p&gt;
&lt;p&gt;Öncelikle sizlerinde bir linux kullanıcısı olduğunu varsayıyorum ve direk gerekli paketlerimizin kurulumuna geçiyorum.Öncelikle bilgisayarımızda couchdb kurulu olmalı.Uygun paket yoneticinize gore couchdb uygulamasını bilgisayarınıza kurun.Ubuntuda couchdb-bin isimli uygulamayı kurduğumda hata ile karşılaştım.Bu yuzden synaptic paket yoneticisine girip couchdb ve couchdb-dev gibi paketleride kurdum.&lt;/p&gt;
&lt;p&gt;Eğer bilgisayarınızda couchdb başarı ile kuruldu ise couchdb'yi başlattığınızda aşağıdaki gibi bir ekran gelmesi lazım.(sudo couchdb komutuyla başlatırsanız hata almazsınız)&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;Apache&lt;/span&gt; &lt;span class="n"&gt;CouchDB&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LogLevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;starting&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Apache&lt;/span&gt; &lt;span class="n"&gt;CouchDB&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;started&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;relax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mf"&gt;0.32&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Apache&lt;/span&gt; &lt;span class="n"&gt;CouchDB&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;started&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="mf"&gt;127.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5984&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Şimdide python içinde kullanabilmemiz için gerekli olan modulleri kuruyoruz.Bunun için pip ve easy_install kullanabilirsiniz.Ben favorim olan pip'i kullanıyorum ve size de onu oneriyorum.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;couchdb&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Şimdi de gerçekten başarıyla kurulmuş mu diye iPythondan kontrol edelim.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;couchdb&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://127.0.0.1:5984/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;     &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;     &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;   &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tasks&lt;/span&gt;      &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;    
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;     &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replicate&lt;/span&gt;  &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt;      &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uuids&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Gorduğunuz gibi once import ettik ve daha sonra serverımızı ayarladık.Couchdb on tanımlı olarak 5984 portunu kullanıyor.İsterseniz bunu /etc/couchdb içindeki ayar dosyasından(default.ini) değiştirebilirsiniz.Ayrıcana bu portun dışarıya açılması içinde gerekli olan ayarlar bu dosyada yer alıyor.&lt;/p&gt;
&lt;p&gt;len(s) komutuyla toplam kaç tane veritabanımız olduğunu kontrol ettik.Bizden once couchdb içine bir adet veritabanı eklemiş.Şimdi de biz bir tane ekleme yapalım.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dosyalar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Dosyalar adında bir veritabanı ekledik ve kontrol ettik gerçekten eklenmiş mi diye.Şimdide butun veritabanlarımızı listeleyelim.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
   &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     
&lt;span class="n"&gt;dosyalar&lt;/span&gt;
&lt;span class="n"&gt;_users&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Kayıtlı olan 2 veritabanımızı gorduğunuz gibi çektik.Şimdide en son eklediğimiz dosyalar veritabanımızı silelim.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dosyalar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Python ve CouchDB kullanmak ne kadar da basit değil mi? Şimdi de veritabanımız içine bir tablo ekleyelim ve buna ilk verilerini girelim.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dosyalar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Dosya&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;baslik&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Deneme Dosyasi&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Iste oyle bir sey&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;97b270042933231539fb1ed07e000141&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Evet tam duşunduğunuz gibi sozluk içerisinde ilk kısım kolon ikinci kısım ise o kolonlardaki veriler.Ve şimdi bir başka veri ekleyelim.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;deneme&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Dosya&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;baslik&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;diger deneme&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;buraya guzel bisiler yaz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;deneme&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Şimdi de bu eklediğimiz verileri nasıl çekeceğimize bakalım.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;deneme&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;baslik&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;diger deneme&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Buraya kadar zaten Python bilginiz varsa olayın nasıl olduğunu ve nasıl kullanılacağı hakkında az çok bilgi edindiniz.Şimdi de bu veritabanlarında nasıl sorgu çalıştıracağımıza bakalım.Eskisi gibi SQL sorguları yerine javascript ile sorgular gerçekleştiriliyor.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;fonksiyon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;function(d) { if (d.baslik.length&amp;gt;4) emit(d.baslik,null); }&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;sira&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fonksiyon&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="o"&gt;....&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;sira&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;
   &lt;span class="o"&gt;....&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     
&lt;span class="n"&gt;Deneme&lt;/span&gt; &lt;span class="n"&gt;Dosyasi&lt;/span&gt;
&lt;span class="n"&gt;diger&lt;/span&gt; &lt;span class="n"&gt;deneme&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Kim derdi ki javascript ile SQL sorgusu gerçekleştirebileceğimizi.Ama işte zamanla ne kadar da gelişti.Eminim daha da gelişecektir.Şimdi bu butun yaptıklarımızı guzel bir ornek ile tamamlayalım.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;couchdb&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://127.0.0.1:5984/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;yazilim&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Firefox&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;browser&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;baslik&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;FireFox&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Safari&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;browser&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;baslik&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Safari&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Aquamacs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;editor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;baslik&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Aquamacs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;browserlar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;function(d) { if (d.type == &amp;quot;browser&amp;quot;) emit(d.baslik,d); }&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;browserlar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;FireFox&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Safari&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;yazilim&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Kodlarımızı satır satır incelersek once coucdb'yi import ettik daha sonra serverımızı tanımladık.Bu serverda yazilim adında bir veritabanı oluşturduk ve bunu db isimli değişkene atadık.Bu veritabanında Firefox, Safari ve Aquamacs isimlerinde tablolar oluşturduk ve içlerine birkaç veri ekledik.Daha sonra veritabanımızı len fonksiyonu ile olçtuk ve 3 değerini aldık.Bunun anlamı veritabanında 3 tablo var.Daha sonra ise browserlar isimle değişkende javascript komutuyla sadece type == browser olan verileri almayı sağladık.Ve bunu sorguyu veritabanımızda çalıştırdık.Gelen değerleri list comprehension(gerçekten turkçesini bilmiyorum) yontemiyle ekrana bastık.Son olarak da bu oluşturduğumuz veritabanını sildim.&lt;/p&gt;
&lt;p&gt;Bu anlattıklarım ile python uygulamarınızın veritabanı eksikliğinde kullanabilirsiniz.Ama bence CouchDB'yi Django ile birlikte kullanmak daha mantıklı.Bunun içinde birkaç değişiklik yapmamız yeterli.Zaten bu değişiklikleri views kısmında kullanacağız.Mesela settings.py dosyamıza COUCHDB_SERVER adında bir değişken atayıp hangi serverı kullanacağımızı ekleyelim.Daha sonra views dosyamızı aşağıdaki gibi bir hale getirelim.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Http404&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;HttpResponseRedirect&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render_to_response&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;couchdb&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Server&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;couchdb.client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ResourceNotFound&lt;/span&gt;

&lt;span class="n"&gt;SERVER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://127.0.0.1:5984&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;yazilar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;yazilar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;yazilar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;baslik&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;baslik&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;yazilar&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;baslik&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;baslik&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;baslik&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;icerik&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponseRedirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;u&amp;quot;/yazi/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;baslik&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render_to_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;yazilar/index.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rows&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;yazilar&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Djangodaki views mantığını biliyorsanız yukarıda tam olarak ne yaptığımı anlamış olmalısınız.Benim burada ufak bir onerim olacak ve hardcode'lardan uzak durmak için aşağıdaki gibi kullanabilirsiniz.(settings.py dosyası içinde tanımladığımız değişkeni aşağıdaki gibi alıp kullanabiliriz)&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="n"&gt;SERVER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;COUCHDB_SERVER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://127.0.0.1:5984&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Özetle NoSql guzel bir teknoloji.Kullanın, deneyin, test edin.Eğer gerçekten ihtiyaç hissederseniz kullanmanız size kalmış birşey.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">halit</dc:creator><pubDate>Mon, 03 Sep 2012 00:00:00 +0300</pubDate><guid>tag:www.halitalptekin.com,2012-09-03:python-ve-couchdb.html</guid><category>couchdb</category><category>django</category><category>django couchdb</category><category>django nosql</category><category>nosql</category><category>python</category><category>python couchdb</category></item><item><title>Pythonic Kod Yazımı</title><link>http://www.halitalptekin.com/pythonic-kod-yazimi.html</link><description>&lt;p&gt;Python diğer tum dillerin aksine boşluklara ve girinti çıkıntılara çok fazla onem veren bir dil.Diğer birçok dilde donguleri başlattıktan sonra {} gibi parantez içine alırsınız.Ancak python'da bu yerine dongu içinde olduğunu belirtmek için boşluklar kullanılır.Haliyle bu da goze hoş gelen ve kolay okunan bir kod parçası ortaya çıkarır.Yoksa diğer dillerde yazılmış bir kodun tam olarak ne yaptığını anlamamız için ya çok fazla zaman harcıcaz ya da gelişmiş bir ide kullanmamız gerekecek.İşte tam bu noktada Python'un temel olarak aldığı ve benimde çok sevdiğim "Programlar insanların okuması, makinelerin çalıştırabilmeleri için yazılırlar" sozu buyuk onem taşıyor.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.flickr.com/photos/ptshello/2312382347/" title="PixelBlocks/001/Python by Filipe ’shello’ Rodrigues, on Flickr"&gt;&lt;img alt="PixelBlocks/001/Python" src="http://farm4.staticflickr.com/3059/2312382347_50808d7237_z.jpg?zz=1" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Biz makinelerin çalıştıracakları kodlar ile uğraşmayacağımız için bize gerekli olan insanların okuması kısmıdır.Elbet her kodu insanlar okuyabilir.Ama dile gore okuma suresi buyuk oranda değişir.Python'un en iddalı olduğu alanlardan birisi belki de en başta gelen ozelliği kodlarının kolayca okunmasıdır.İşte bu noktada başlığa da yazdığım &lt;a href="http://halitalptekin.tumblr.com/post/30028271874/pythonic-syntax"&gt;Pythonic Syntax&lt;/a&gt; deyimi akla geliyor.&lt;/p&gt;
&lt;p&gt;Benim bundan 1-2 yıl once gorduğum ve okuduğumda tam istediğim dilin Python olduğuna karar verdiğim slaytlardan bir iki ufak başlıkları seçip buraya yazmak istedim.Eğer siz bu slaytların tamamını orjinal dilinden okumak isterseniz &lt;a href="http://www.halitalptekin.com/link/bF"&gt;buradan&lt;/a&gt; ulaşabilirsiniz.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Her Python programcısı PEP8'i bilmelidir&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PEP(Python Enhancement Proposal) Python'u geliştirme onerileridir.Python'u yazan kişilerden bu dilin gelişmesi için onerileri iyice okuyup benimsemek lazım.İlk girişte de yazdığım gibi Python'un Java,C,C++,C# gibi birçok dilden farklı bir yapısı vardır.Bunların başında boşluklar ve girintili yazma gelir.Tabi bu yazım da belirli kurallara dayanır.Onlardan bazılarını aşağıda yazacağım.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Boşluklar&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Her girinti için 4 boşluk kullanılması lazımdır.&lt;/li&gt;
&lt;li&gt;Hard tab kullanımından kaçınmak ve bu tabları boşluklar ile karıştırmamak lazım.&lt;/li&gt;
&lt;li&gt;Fonksiyonlar arasına bir satır, sınıflar arasına da iki satır koymak uygundur.&lt;/li&gt;
&lt;li&gt;Kullandığınız sozluk, liste, demet ve arguman listesinde virgulden sonra bir boşluk koymak gerekir.&lt;/li&gt;
&lt;li&gt;Karşılaştırma ve atamalarda aralara boşluk koyulmalıdır.(if meyve==elma: yerine if meyve = elma: )&lt;/li&gt;
&lt;li&gt;Parantezlerden once boşluk koyulmaz.&lt;/li&gt;
&lt;li&gt;Fonksiyonu tanıttığımız kısımda boşluk olmaz.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;İsimlendirmeler&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;kucuk_harf&lt;/strong&gt; gibi bir kullanımı fonksiyonlar, metodlar ve değişkenlerde kullanabiliriz. &lt;strong&gt;kucuk_harf&lt;/strong&gt; ve &lt;strong&gt;BUYUK_HARF&lt;/strong&gt; değişmez olarak kullanılabilir.&lt;strong&gt;FenSinifi&lt;/strong&gt; gibi bir kullanımı genelde sınıfları tanımlarken kullanırız.Niteliklerde &lt;strong&gt;interface&lt;/strong&gt;,&lt;strong&gt; _internal&lt;/strong&gt;, &lt;strong&gt;__private&lt;/strong&gt; gibi bir yapi kullanabiliriz.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Uzunluklar&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Satır uzunluğunu 80 karakterden aşağıda tutmalıyız.Bu hem goze hoş gelir hem de daha sonra o kodu okuyacak kişiye rahatlık sağlar.Çok fazla ozellikli yapılarda aşağıdaki gibi bir yapı kullanabilirsiniz.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;third&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;fourth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fifth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sixth&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;second&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;third&lt;/span&gt;
              &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fourth&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fifth&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sixth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Yatık çizgiyi() mumkun olduğunda son çare olarak kullanın.Hatta hiç kullanmayın.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;VeryLong&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left_hand_side&lt;/span&gt; \
    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;even_longer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right_hand_side&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Birleşik ifadeler&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Burada çok fazla kişi yanlış yapıyor.Aşağıda olması ve olmaması gereken iki durum var.Gorduğunde çok daha rahat anlayacaksınız.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Doğru&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;blah&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;do_one&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;do_two&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;do_three&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Yanlış&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;blah&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;do_one&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;do_two&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;do_three&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Docstrings ve Yorumlar&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Docstings = Kodların nasıl kullanılacağını anlatır&lt;/p&gt;
&lt;p&gt;Yorumlar = Niçin ve nasıl çalışacağını anlatır&lt;/p&gt;
&lt;p&gt;Bu konuda gerçekten çok onemli.Çunku birçok kişi fonksiyonların veya sınıfların nasıl çalışacakları ile nasıl kullanılacakları arasındaki farkı karıştırabiliyor.Burada bilmemiz ve uymamız gerekenler &lt;a href="http://www.python.org/dev/peps/pep-0257/"&gt;PEP 257&lt;/a&gt;'de anlatılmış.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Değişken Değişimleri&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python'un diğer dillerden ne kadarda ustun olduğunu gostermek için sadece iki ornek kod veriyorum.Bunların ikisi de aynı işi yapıyor ve değişkenlerin değerlerini değiştiriyor.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Diğer diller&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3 satır oldu sana tek satır ? Bu olay Pythondaki bana en fantastik olgulardan birisi olan demetlerin bir ozelliği.Paketleme ve yeniden açma diye bilinir.Çok daha fazla bilgi için &lt;a href="http://www.istihza.com/py2/demet.html"&gt;istihzaya&lt;/a&gt; bakabilirsiniz.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;İnteraktif "_"&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bu benim birkaç yerde gorup uzerine gidince oğrendiğim gerçekten çok faydalı bir durum.Kısaca çağırdığımız fonksiyonlar geçici olarak _ isminde tutuluyor.Başta ilginç geliyor ancak kullanım sırasında olayın farkına varıyorsunuz.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;String Oluşturma&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Benim yaptığım en buyuk hatalardan birisi de yeni bir string oluşturacağımız zaman kullandığım metoddu.İlk ornek benim onceleri yaptığım, ikinci ornek ise olması gereken ve bundan sonra yapacağım metod.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;yellow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Yerine&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ne kadar da basit ve tek satırmış değil mi.&lt;/p&gt;
&lt;p&gt;Yukarıda yazdıklarım Python için guzel kod yazma aşamalarının sadece ufak bir kısmı.Bu konuda internette yapacağınız araştırmalarda çok daha fazla kaynak bulabilirsiniz.Örneğin bir Django kullanıcısı iseniz bu konuda stackoverflow'da çok guzel bir &lt;a href="http://stackoverflow.com/questions/550632/favorite-django-tips-features"&gt;liste&lt;/a&gt; var.Aynı şekilde Python için yapılmış olanları da var.Python'un offical sitesinde de harika kaynaklar var.Özellikle benim tavsiyem iyice PEP 8 mantığını kavramak.Daha sonra zamanla devamı gelecektir.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">halit</dc:creator><pubDate>Sat, 01 Sep 2012 00:00:00 +0300</pubDate><guid>tag:www.halitalptekin.com,2012-09-01:pythonic-kod-yazimi.html</guid><category>django framework</category><category>pep 8</category><category>python</category><category>python dili</category><category>pythonic syntax</category><category>python kullanıcısı</category><category>python programlama</category></item><item><title>Modülleri Paketleyip Paylaşmak</title><link>http://www.halitalptekin.com/modulleri-paketleyip-paylasmak.html</link><description>&lt;p&gt;Python'u ilk başta duşunup koda doken adamlar onlardan sonraki gelecek nesilleri daha en baştan duşunmuşler.Yeni geliştiriciler kod yazsında diğer geliştiricilerle paylaşsın kendisini geliştirsin diye her turlu kolaylığı sağlamışlar.Benim Python'un sevdiğim en guzel yanlarından birisi de kesinlikle bu.Çunku yazdığım kodu setuptools araçları ile paketleyip diğer kullanıcılarında benim modullerimi kullanılır hale getirebiliyorum.Bunu da sadece birkaç ufak komut ile yapıyorum.Yani Python'un bizden tek beklentisi var.Sadece kod yaz,paylaş,başkalarının kodlarını kullan ve kendini geliştir.&lt;/p&gt;
&lt;p&gt;Bugun bu konulardan paylaş bolumunu içeren kısmı en basit ayrıntılarıyla anlatmaya çalışacağım.Çunku bu konuda Python'a başlattığım bazı kişiler çok fazla soru sormaya başladılar.Demek ki hepsi artık bir eşik değerini aştılar.&lt;/p&gt;
&lt;p&gt;Öncelikle paylaşımını yapacağımız ornek bir gereksiz fonksiyon yazalım.Bu fonksiyon o kadar gereksiz olsun ki bu koda bakan kişiler acaba bu adam ne duşundu de bu kodu yazdı diyip google'da araştırma yapıp siteme gelsin ve bana hit kazandırsın :D&lt;/p&gt;
&lt;p&gt;Tabi siz bu kadar acımasız duşunmek yerine yazdığınız yararlı kodlarıda paylaşabilirsiniz.Ben aşağıdaki bir hayli gereksiz,saçma sapan kodu paylaşıma ornek gostermek amacıyla yazdım.Mantığına değinmek gerekirse cevir fonksiyonuna gonderilecek string değermi diye en başta kontrol ediliyor daha sonra eğer string ise ve uzunluğu tek ise bu kelime birkaç değişiklik yapıp liste olarak geri donduruyor.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cevir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kelime&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="sd"&gt;    Gonderilen Strink tipindeki karakterlerin eger tek sayi uzunlugunda ise tam oradaki degerine : atayip,listeyi buradan boluyor.&lt;/span&gt;

&lt;span class="sd"&gt;    Daha sonra bu bolunen harfleri yeni bir liste haline getirip return ile geri donduruyor.&lt;/span&gt;

&lt;span class="sd"&gt;    Olabildigince gereksiz ve kimsenin isine yaramaz bir moduldur.Gene de kullanmak isteyenlere hayir demiyorum.&lt;/span&gt;

&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kelime&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;kelime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;uzunluk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kelime&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;uzunluk&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Gonderdiginiz kelimenin uzunlugu cifttir.Sadece tek gonderebilirsiniz.&amp;quot;&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;uzunluk&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

            &lt;span class="n"&gt;kelime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kelime&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;kelime&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;uzunluk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;
            &lt;span class="n"&gt;kelime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kelime&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;yeni&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kelime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="n"&gt;yenikelime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

            &lt;span class="n"&gt;yenikelime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yeni&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="n"&gt;yenikelime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yeni&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="n"&gt;yenikelime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yeni&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="n"&gt;yenikelime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yeni&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;yenikelime&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Sadece string tipi degisken gonderebilirsiniz!&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ve bi hayli gereksiz olan modulumuzu hazırladık.Daha sonra bu kodlarımız çalışıyormu aynı dizinde test ettim.Gayet gereksiz bir biçimde çalışıyor.Şimdi ben PyCharm editorumde bulunan Tools-&amp;gt;Create setup.py sekmesinden oluşturacağım setup.py dosyasının içeriğini belirliyorum.Siz el ile de yapabilirsiniz.Aşağıdaki kodun aynısını kendinize gore duzenleyebilirsiniz.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python PyCharm Setup Tools" src="http://www.halitalptekin.com/media/upload/pypi/1-pycharm-setup-tools-python.png" /&gt;&lt;/p&gt;
&lt;p&gt;Oluşturulan setup.py dosyasının içeriği aşağıdadır.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;distutils.core&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;

&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;gereksiz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0.1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;www.halitalptekin.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;license&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;GPL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Halit Alptekin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;author_email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;info@halitalptekin.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;String tipindeki karakterleri reverse metoduna benzer sekilde geri dondurur.&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ve gorunumu aşağıdaki gibi oluyor.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.halitalptekin.com/media/upload/pypi/2-pycharm-setup-tools-python.png"&gt;&lt;img alt="Python PyCharm Setup Tools" src="http://www.halitalptekin.com/media/upload/pypi/2-pycharm-setup-tools-python.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ve bu modulumuz için uygun şekilde bir yardım dosyası oluşturuyoruz.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.halitalptekin.com/media/upload/pypi/3-setup-tools-readme.png"&gt;&lt;img alt="Python Setup Tools Readme" src="http://www.halitalptekin.com/media/upload/pypi/3-setup-tools-readme.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ve artık yapmamız gerekenler buyuk oranda bitti.Bundan sonra yaptığımız modulu dağıtıma hazır hale getirmek için setuptools'tan faydalanacağız.Bunun için oncelikle &lt;strong&gt;python setup.py sdist&lt;/strong&gt; komutunu çalıştırıyoruz.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.halitalptekin.com/media/upload/pypi/4-python-setup-tools-sdist.png"&gt;&lt;img alt="Python Setup Tools Sdist" src="http://www.halitalptekin.com/media/upload/pypi/4-python-setup-tools-sdist.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bu komuttan sonra o dizinde dağıtıma hazır bir tar.gz dosyası ve dosya listesinin bulunduğu manifest oluşuyor.Ve artık &lt;strong&gt;python setup.py install &lt;/strong&gt;diyerek bu modulumuzu bir kuralım.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python Setup Tools Install" src="http://www.halitalptekin.com/media/upload/pypi/5-python-setup-tools-install.png" /&gt;&lt;/p&gt;
&lt;p&gt;Burada sudo komutunu kullanma sebebim python dizinine yazma yetkisi almak içindir.Ubuntuda guvenlik için bu şekilde bir uygulama var.Ve artık sıra geldi modulumuzu PyPi'ye yuklemeye.&lt;/p&gt;
&lt;p&gt;Öncelikli olarak &lt;a href="http://pypi.python.org/pypi"&gt;PyPi&lt;/a&gt; sitesine girip kayıt oluyoruz.Buraya kayıt olurken kullandığımız kullanıcı adı ve şifreyi bizim için onemli.Kayıt olduktan sonra tekrardan konsola donuyoruz ve &lt;strong&gt;python setup.py register&lt;/strong&gt; komutuyla uygulamamızı kayıt ediyoruz.Burada size kullanıcı adınız ve şifreniz sorulacak.Doğru şekilde verdiğiniz takdirde serverdan 200 değerini almanız lazım.Kayıdı tamamladıktan sonra uygulamamızı PyPi'ye yukluyoruz.Bunun için &lt;strong&gt;python setup.py sdist upload&lt;/strong&gt; komutunu uyguluyoruz.Ve uygulamamız PyPi'ye gitti.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.halitalptekin.com/media/upload/pypi/6-python-pypi-register.png"&gt;&lt;img alt="Python PyPi Register" src="http://www.halitalptekin.com/media/upload/pypi/6-python-pypi-register.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bu işlemden sonra PyPi'ye girip uygulamamıza bir goz atalım.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python Pypi Control" src="http://www.halitalptekin.com/media/upload/pypi/7-python-pypi-control-cvs.png" /&gt;&lt;/p&gt;
&lt;p&gt;Ve bir hayli gereksiz uygulamamızı başarıyla yukledik.Bundan sonra bizim modulumuzu kullanmak isteyenler &lt;strong&gt;pip install gereksiz&lt;/strong&gt; komutuyla başarıyla kurabilirler.Ve bu modulumuzun gercekten yuklenip yuklenmediğini ipython kullanarak test edelim.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python Modul Import" src="http://www.halitalptekin.com/media/upload/pypi/8-python-modul-import.png" /&gt;&lt;/p&gt;
&lt;p&gt;Ve gercekten hiçbir işe yaramayan, gereksiz, saçma sapan modulumuz gerçekten de çalışıyor.Siz daha yararlı başkalarının işine gerekli uygulamaları paylaşırsanız Python için daha iyi olacaktır :D&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">halit</dc:creator><pubDate>Mon, 27 Aug 2012 00:00:00 +0300</pubDate><guid>tag:www.halitalptekin.com,2012-08-27:modulleri-paketleyip-paylasmak.html</guid><category>pycharm</category><category>pypi</category><category>pypi kayıt</category><category>python</category><category>python setup dosyası hazırlama</category><category>python setup tools</category></item><item><title>Elixir Ve Sqlalchemy</title><link>http://www.halitalptekin.com/elixir-ve-sqlalchemy.html</link><description>&lt;p&gt;ORM kavramı benim Django ile birlikte tanıştığım ve gerçekten çok hoşuma giden bir şey.ORM ile veritabanında işleyeceğimiz sorguları sınıflar olarak tanımlıyoruz ve code generator tekniği ile bunları sql sorgusuna dokuyoruz.Tabi biz bu sırada bu sorgular ile pek ilgilenmiyoruz.Bizim ilgilendiğimiz nokta sınıfları en uygun şekilde tanımlamak.Bunun getirdiği bence çok guzel sonuçlar var.Django ORM kavramını kullanan en guzel orneklerden birisi.Turkiyede'de ORMAN adında geliştirilim guzel bir framework var.Ancak benim bugun anlatacağım ORM Elixir ve SqlAlchemy ile ilgili.Bu ikisi python ile nasıl kullanabiliriz basitçe giriş yapacağım.&lt;/p&gt;
&lt;p&gt;Ben python uygulamalarımda virtualenv kullanıyorum.Çunku gerçekten dağınıklığını bir nebzede olsa onlemenizi sağlıyor.Eğer sizde bu guzel nimetten faydalanmak istiyorsanız bilgisayarınıza oncelikli olarak virtualenv yazılımını kurun.Bunun için komut satırına aşağıdaki komutu girmeniz yeterlidir.(Hangi linux dağıtımını kullanıyorsanız kullanın kesinlikle Python ile uğraşıyorsanız bilgisayarınıza pip'in kurulumunu yapınız.)&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;virtualenv&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Kurulum bittikten sonra virtualenv dizin ismi şeklinde dizinimizi oluşturuyoruz.Ve daha sonra bu dizine girerek source'u aktif ediyoruz.Ve artık normal bilgisayarınızdan bağımsız bir sanal platforma sahip oldunuz.Şimdi de gerekli yazılımımız olan elixir'i kuralım.Pip virtualenv içinde kurulu olduğu için tekrardan kurmanız gerek yok.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.halitalptekin.com/media/upload/virtualenv_pip_elixir_sql_alchemy.png"&gt;&lt;img alt="Virtualenv Pip Elixir Sql Alchemy" src="http://www.halitalptekin.com/media/upload/virtualenv_pip_elixir_sql_alchemy.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Şimdi ise işin kodlama kısmına geçiyoruz.Öncelikle veritabanımızda olacak olan tablo ve kolonları sınıf içinde tanımlamak ile başlıyoruz.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.halitalptekin.com/media/upload/elixir-sql-alchemy-model-tanimlama.png"&gt;&lt;img alt="Elixir Sql Alchemy Model Tanımlama" src="http://www.halitalptekin.com/media/upload/elixir-sql-alchemy-model-tanimlama.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Satirlari bir bir anlatmak gerekirse once gerekli modulumuzu dosyamıza ekliyoruz.Ardından bu module ait metadata.bind komutu ile kullanacağımız veritabanını seçiyoruz.Aynı komutun bir diğer ozelliği olacak echo ile de birazdan yapılacak olan sorguların ekrana basılıp basılmamasını kararlaştırıyoruz.&lt;/p&gt;
&lt;p&gt;Asıl onemli olan kısım ise Siteler diye tanımladığımız Entity'den miras alan sınıf.Buranın altına veritabanımızda olmasını istediğimiz kolonları ekliyoruz.Malum tablomuz artık Siteler oldu.Kolon olarak ben baslik,site ve aciklama eklemeleri yapmışım.Burada farkettiğiniz gibi baslik kolonuna 30 hanelik bir sınır getirmişim.Bu kolona 30 haneden fazla veri girişi yapamayız.Ardından site kolonuna da baslik ile aynı ancak sınırlama olmaksızın kolon ataması yapmışız.En altta da aciklama kolonunu text olarak kullanacağımızı belirtmişiz.&lt;/p&gt;
&lt;p&gt;Daha sonrada bir nevi gereklilik olan &lt;strong&gt;repr&lt;/strong&gt; fonksiyonumuzu uygun bir şekilde tanımlıyoruz.&lt;/p&gt;
&lt;p&gt;Butun bunların ardından veritabanına oluşacak olanlar buyuk oranda tamamlandı.Şimdi sıra bunları işlemeye ve tabloları oluşturmaya geldi.Yukarıdaki koda &lt;a href="https://gist.github.com/3386356"&gt;buradan&lt;/a&gt; ulaşabilirsiniz.&lt;/p&gt;
&lt;p&gt;Şimdi de yukarıdaki modelimizi uygun bir şekilde işleyelim.Bunun için ben veri adında yeni bir dosya açtım.(Aşağıdaki resme tıklarsanız tam boyutlu olarak daha net gorebilirsiniz)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.halitalptekin.com/media/upload/elixir-sql-alchemy-veri-isleme.png"&gt;&lt;img alt="Elixir Sql Alchemy Veri Isleme" src="http://www.halitalptekin.com/media/upload/elixir-sql-alchemy-veri-isleme.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;veri.py kodumuza bakarsanız oncelikli olarak az once oluşturduğumuz model dosyamızı ekliyoruz.Daha sonra gerekli olan kurulum ve oluşturmaları yapıyoruz.Butun bunlardan sonra dbmiz veri eklemek için hazır.Şimdi gorduğunuz gibi model.py dosyamızda oluşturduğumuz sınıf Siteler artık bir tablo oldu.Ve ona resimdeki gibi veri girişi yapabiliyoruz.&lt;/p&gt;
&lt;p&gt;Kayit eklemelerin ardından all() fonksiyonu kullanarak tum kayıtları bir listeye atayabiliyoruz.Ve bu listeyi Python kullananların aşina olduğu teknik ile ekrana basıyoruz.Eğer kodumuz bu kadar olsaydı çalıştırdığınızda ekranınızda aşağıdaki gibi bir goruntu elde edeceksiniz.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;--------------------&lt;/span&gt;
&lt;span class="n"&gt;Halit&lt;/span&gt; &lt;span class="n"&gt;Alptekin&lt;/span&gt;
&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;halitalptekin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="n"&gt;Halit&lt;/span&gt; &lt;span class="n"&gt;Alptekin&lt;/span&gt; &lt;span class="n"&gt;Personal&lt;/span&gt; &lt;span class="n"&gt;Blog&lt;/span&gt;
&lt;span class="o"&gt;--------------------&lt;/span&gt;
&lt;span class="o"&gt;--------------------&lt;/span&gt;
&lt;span class="n"&gt;Google&lt;/span&gt;
&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="n"&gt;Arama&lt;/span&gt; &lt;span class="n"&gt;Motoru&lt;/span&gt;
&lt;span class="o"&gt;--------------------&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Daha sonra kodumuzda gorduğunuz bir diğer kısımda kayıtlar arasında arama yapma.Burada başlığı "Halit Alptekin" e eşit olan kayitları tek değişkende topluyoruz.Ve bu kayıtlardan ilkini kayit değişkenine atıyoruz.Daha sonra bu değişkeni gene her zamanki gibi uygun bir şekilde ekrana basıyoruz.&lt;/p&gt;
&lt;p&gt;Biraz aşağıda ise bu bulduğumuz kayiti nasil sileceğimiz yer alıyor.Gayet basit bir şekilde delete() fonksiyonunu çağırarak kaydimizi siliyoruz ve bunu son satırdaki komut ile işliyoruz.Yukarıda yer alan koda &lt;a href="https://gist.github.com/3386393"&gt;buradan&lt;/a&gt; ulaşabilirsiniz.&lt;/p&gt;
&lt;p&gt;Python ile SqlAlchemy Elixir kullanmak işte yukarıda gorduğunuz kadar basit.Ben bu olayı kavradıktan sonra veritabanı gerektiren tum işlerimde kullanmaya başladım.Ve gerçekten de çok fazla faydasını goruyorum.(Sadece Sqlite değil mysql,postgresql vb diğer veritabanlarını da destekliyor)&lt;/p&gt;
&lt;p&gt;Eğer sizde bu konulara ilgi duyduysanız &lt;a href="http://elixir.ematia.de/trac/"&gt;Elixir&lt;/a&gt; ve &lt;a href="http://sqlalchemy.org"&gt;SqlAlchemy&lt;/a&gt; sitelerine giderek araştırmaya başlayabilirsiniz.Benim anlattıklarım başlangıç aşamasının da çok kuçuk bir kısmı.Ancak olayın temeli denilebilir.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">halit</dc:creator><pubDate>Sat, 18 Aug 2012 00:00:00 +0300</pubDate><guid>tag:www.halitalptekin.com,2012-08-18:elixir-ve-sqlalchemy.html</guid><category>elixir</category><category>elixir kullanımı</category><category>orm</category><category>orm nedir</category><category>sqlalchemy</category><category>sql alchemy</category></item><item><title>Güvenlik İle İlgili Python Araçları</title><link>http://www.halitalptekin.com/guvenlik-ile-ilgili-python-araclari.html</link><description>&lt;p&gt;Python akla hayale gelemeyecek kadar çok alanda kullanılıyor.Bunların arasında bilimsel araştırmalardan tutun da marsa gonderilen robotun test aşamlarında kullanılmasına kadar birçok alanda Python'a denk gelebilirsiniz.benimde uzun suredir severek her kutuphanesini frameworkunu kullandığım bu dilin aktif olduğu alanlardan biriside kesinlikle guvenliktir.Eğer sizde sistem guvenliği,tersine muhendislik,guvenlik araştırmaları gibi konular ile yakından ilgili iseniz Python'da sizin için birçok araç bulunmakta.Bir sitede gorduğum bu harika listeden eminim ihtiyaç sahipleri faydalanacaktır.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.flickr.com/photos/dmguz/2554899459/" title="Certified Ethical Hacker by dmguz, on Flickr"&gt;&lt;img alt="Certified Ethical Hacker" src="http://farm4.staticflickr.com/3025/2554899459_60bc2aa0e3_z.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Aşağıdaki araçların çoğu python ile yazılmış.Diğer kısımları ise C kutuphanelerini pythonda kullanmanız için yazılmışlar.Eminim beyaz şapkalı guvenlik uzmanlarının içine çok fazla yarayacaktır.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ağ&lt;/strong&gt;&lt;br /&gt;
&lt;a href="http://secdev.org/projects/scapy"&gt;Scapy&lt;/a&gt; - ağ paketlerini gonderme, dinleme ve işleme. İnteraktif olarak veya kutuphane olarak kullanılabilir.&lt;br /&gt;
&lt;a href="http://code.google.com/p/pypcap/"&gt;pycap&lt;/a&gt;, &lt;a href="http://oss.coresecurity.com/projects/pcapy.html"&gt;Pcapy&lt;/a&gt; ve &lt;a href="http://pylibpcap.sourceforge.net/"&gt;pylibpcap&lt;/a&gt; - libpcap için çeşitli Python bağlayıcıları&lt;br /&gt;
&lt;a href="http://code.google.com/p/dpkt/"&gt;dpkt&lt;/a&gt; - hızlı, basit paket yaratma parse etme, temel TCP/IP protokollerinin tanımlarına sahip&lt;br /&gt;
&lt;a href="http://oss.coresecurity.com/projects/impacket.html"&gt;Impacket&lt;/a&gt; - Ağ paketleri yaratma ve decode etme. NMB ve SMB gibi yuksek-seviye protokoller için desteği de var.&lt;br /&gt;
&lt;a href="http://jon.oberheide.org/pynids/"&gt;pynids&lt;/a&gt; - dinleme, IP defragmentation, TCP stream tekrar birleştirme ve port tarama tespiti sunan libnids wrapper&lt;br /&gt;
&lt;a href="http://dirtbags.net/py-pcap/"&gt;Dirtbags py-pcap&lt;/a&gt; - libpcap olmadan pcap dosyalarını okuma&lt;br /&gt;
&lt;a href="http://monkey.org/%7Ejose/software/flowgrep/"&gt;flowgrep&lt;/a&gt; - regular expression kullanarak paket yuklerine grep&lt;br /&gt;
&lt;a href="http://code.google.com/p/httplib2/"&gt;httplib2&lt;/a&gt; - Diğer HTTP kutuphanelerinde eksik olan çok sayıda ozelliğe sahip kapsamlı bir HTTP istemci kutuphanesi&lt;br /&gt;
&lt;a href="http://code.google.com/p/knock/"&gt;Knock Subdomain Scan&lt;/a&gt; - hedef bir alandaki alt alanları bir kelime listesi kullanarak listeler&lt;br /&gt;
&lt;a href="https://bitbucket.org/IntrepidusGroup/mallory"&gt;Mallory&lt;/a&gt; - man-in-the-middle proxy&lt;br /&gt;
&lt;a href="http://mitmproxy.org/"&gt;mitmproxy&lt;/a&gt; - SSL destekli, mitm proxy. Konsol arayuzunde trafik akışı geçiş anında incelenip değiştirilebilir.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Debug ve reverse engineering&lt;/strong&gt;&lt;br /&gt;
&lt;a href="http://code.google.com/p/paimei"&gt;Paimei&lt;/a&gt; - Reverse engineering framework, &lt;a href="http://pedram.redhive.com/PyDbg/"&gt;PyDBG&lt;/a&gt;, PIDA, pGRAPH'ı içeriyor&lt;br /&gt;
&lt;a href="http://www.immunityinc.com/products-immdbg.shtml"&gt;Immunity Debugger&lt;/a&gt; - script destekli grafik arayuz ve komut satırı debugger&lt;br /&gt;
&lt;a href="http://d-dome.net/idapython/"&gt;IDAPython&lt;/a&gt; - Python programlama dili ile entegre olup script'lerin IDA Pro içinde çalıştırılabilmesini sağlayan bir IDA Pro plugini.&lt;br /&gt;
&lt;a href="http://code.google.com/p/pyemu/"&gt;PyEMU&lt;/a&gt; - IA-32 emulator, zararlı yazılım analizinde kullanışlı&lt;br /&gt;
&lt;a href="http://code.google.com/p/pefile/"&gt;pefile&lt;/a&gt; - Portable Executable dosyalarını okuma ve çalışma&lt;br /&gt;
&lt;a href="http://dkbza.org/pydasm.html"&gt;pydasm&lt;/a&gt; - &lt;a href="http://www.nologin.org/main.pl?action=codeView&amp;amp;codeId=49&amp;amp;"&gt;libdasm&lt;/a&gt; x86 disassembling kutuphanesi için Python arabirimi&lt;br /&gt;
&lt;a href="http://pydbgeng.sourceforge.net/"&gt;PyDbgEng&lt;/a&gt; - Microsoft Windows Debugnig Engine için Python wrapper&lt;br /&gt;
&lt;a href="http://oss.coresecurity.com/projects/uhooker.htm"&gt;uhooker&lt;/a&gt; - DLL'ler içinden yapılan API çağrılarını yakalama ve çalıştırılabilir dosyanın hafızasında istenilen adresler...&lt;br /&gt;
&lt;a href="http://www.ragestorm.net/distorm/"&gt;diStorm64&lt;/a&gt; - AMD64 için dissambler kutuphanesi, BSD lisanslı&lt;br /&gt;
&lt;a href="http://bitbucket.org/haypo/python-ptrace/wiki/Home"&gt;python-ptrace&lt;/a&gt; - ptrace kullanan debugger (işlemleri trace için Linux, BSD ve Darwin sistem çağrısı)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fuzzing&lt;/strong&gt;&lt;br /&gt;
&lt;a href="http://code.google.com/p/sulley/"&gt;Sulley&lt;/a&gt; - Genişletilebilir bileşenlere sahip fuzzer geliştirme ve fuzz test framework&lt;br /&gt;
&lt;a href="http://peachfuzz.sourceforge.net/"&gt;Peach Fuzzing Platform&lt;/a&gt; - Generation ve mutation tabanlı fuzzing için genişletilebilir fuzzing framework&lt;br /&gt;
&lt;a href="http://antiparser.sourceforge.net/"&gt;antiparser&lt;/a&gt; - fuzz test ve fault injection API&lt;br /&gt;
&lt;a href="http://theartoffuzzing.com/"&gt;TAOF&lt;/a&gt;, &lt;a href="http://theartoffuzzing.com/joomla/index.php?option=com_content&amp;amp;task=view&amp;amp;id=21&amp;amp;Itemid=40"&gt;ProxyFuzz&lt;/a&gt; ile, bir mitm non-deterministic network fuzzer&lt;br /&gt;
&lt;a href="http://untidy.sourceforge.net/"&gt;untidy&lt;/a&gt; - Genel amaçlı XML fuzzer&lt;br /&gt;
&lt;a href="http://www.powerfuzzer.com/"&gt;Powerfuzzer&lt;/a&gt; - Tamamen otomatikleştirilebilen ve ozelleştirilebilen we fuzzer (HTTP protoklu tabanlı uygulama fuzzer)&lt;br /&gt;
&lt;a href="https://www.isecpartners.com/file_fuzzers.html"&gt;FileP&lt;/a&gt; - Dosya fuzzer. Kaynak dosya listesinden mutate edilmiş dosyalar yaratır ve bunları harici bir programa verir.&lt;br /&gt;
SMUDGE&lt;br /&gt;
&lt;a href="http://www.packetstormsecurity.org/fuzzer/mistress.rar"&gt;Mistress&lt;/a&gt; - Önceden belirlenmiş pattern'lere gore dosya formatları ve bozuk veriye sahip protokol testi&lt;br /&gt;
&lt;a href="https://www.isecpartners.com/fuzzbox.html"&gt;Fuzzbox&lt;/a&gt; - çoklu-codec medya fuzzer&lt;br /&gt;
&lt;a href="https://www.isecpartners.com/forensic_fuzzing_tools.html"&gt;Forensic Fuzzing Araçları&lt;/a&gt; - fuzzed dosyalar, fuzzed dosya sistemleri yaratıp forensic araçlarının ve inceleme sistemlerinin test edilmesi&lt;br /&gt;
&lt;a href="https://www.isecpartners.com/windows_ipc_fuzzing_tools.html"&gt;Windows IPC Fuzzing Araçları&lt;/a&gt; - Windows Interprocess Communication mekanizmalarını kullanan uygulamaları fuzz etmekte kullanılan araçlar&lt;br /&gt;
&lt;a href="https://www.isecpartners.com/wsbang.html"&gt;WSBang&lt;/a&gt; - SOAP tabanlı web servislerinin otomatik guvenlik testi&lt;br /&gt;
&lt;a href="http://construct.wikispaces.com/"&gt;Construct&lt;/a&gt; - Binary veya textual veri yapılarını parse ve inşa. Kendi veri yapılarınızı tanımlayın.&lt;br /&gt;
&lt;a href="http://sites.google.com/site/felipeandresmanzano/fuzzer.py?attredirects=0"&gt;fuzzer.py (feliam)&lt;/a&gt; - Felipe Andres Manzano'dan basit bir fuzzer&lt;br /&gt;
&lt;a href="https://bitbucket.org/haypo/fusil/wiki/Home"&gt;Fusil&lt;/a&gt; - Fuzzing programları yazmak için python kutuphanesi&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Web&lt;/strong&gt;&lt;br /&gt;
&lt;a href="https://www.isecpartners.com/proxmon.html"&gt;ProxMon&lt;/a&gt; - Proxy log'larını işleyip bulunan problemleri raporlar&lt;br /&gt;
&lt;a href="https://www.isecpartners.com/wsmap.html"&gt;WSMap&lt;/a&gt; - web servis endpoint'leri bulmada ve dosyaları keşfetmede&lt;br /&gt;
&lt;a href="http://twill.idyll.org/"&gt;Twill&lt;/a&gt; - Webe komut satırından bakın. Otomatik webn testi destekliyor.&lt;br /&gt;
&lt;a href="http://trac.getwindmill.com/"&gt;Windmill&lt;/a&gt; - Web uygulamanızı otomatik olarak test ve debug etmenizi sağlayan web test aracı&lt;br /&gt;
&lt;a href="http://funkload.nuxeo.org/"&gt;FunkLoad&lt;/a&gt; - Fonksiyonel ve yuk testi&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Forensic&lt;/strong&gt;&lt;br /&gt;
&lt;a href="https://www.volatilesystems.com/default/volatility/"&gt;Volatility&lt;/a&gt; - Volatile hafıza (RAM) orneklerinden dijital bulgular çıkarma&lt;br /&gt;
&lt;a href="http://sandman.msuiche.net/"&gt;SandMan&lt;/a&gt; - Windows surumune bağlı olmadan hibernation dosyasını okuma&lt;br /&gt;
&lt;a href="http://code.google.com/p/libforensics/"&gt;LibForensics&lt;/a&gt; - Dijital forensic uygulamaları geliştirmek için kutuphane&lt;br /&gt;
&lt;a href="http://mark0.net/code-tridlib-e.html"&gt;TrIDLib&lt;/a&gt; - Dosya tiplerini binary imzalarından tanıma. Artık Python bağlantısı da içeriyor.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Zararlı Yazılım Analizi&lt;/strong&gt;&lt;br /&gt;
&lt;a href="http://code.google.com/p/pyew/"&gt;pyew&lt;/a&gt; - komut satırı hexadecimal editor ve disassembler, temelde zararlı yazılım testi için&lt;br /&gt;
&lt;a href="http://www.decalage.info/exefilter"&gt;Exefilter&lt;/a&gt; - e-postalardaki, web sayfalarındaki veya dosyalardaki dosya formatlarını filreleme. Çoğu genel dosya tipini tespit ediyor ve aktif içeriği çıkarabiliyor.&lt;br /&gt;
&lt;a href="http://xael.org/norman/python/pyclamav/index.html"&gt;pyClamAV&lt;/a&gt; - Python yazılımınıza virus tespit yetenekleri ekleyin&lt;br /&gt;
&lt;a href="https://code.google.com/p/jsunpack-n/"&gt;jsunpack-n&lt;/a&gt; - Genel JavaScript unpacker: browser fonksiyonlarını emule ederek browser ve browser plug-in açıklarını hedefleyen exploit'leri tespit etmek için&lt;br /&gt;
&lt;a href="http://code.google.com/p/yara-project/source/browse/trunk/yara-python/README"&gt;yara-python&lt;/a&gt; - zararlı yazılım orneklerini tanımlama ve sınıflandırma için&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PDF&lt;/strong&gt;&lt;br /&gt;
&lt;a href="http://blog.didierstevens.com/programs/pdf-tools"&gt;Didier Stevens'ın PDF Araçları&lt;/a&gt; - PDF dosyalarını analiz, tanıma ve yaratma (&lt;a href="http://blog.didierstevens.com/programs/pdf-tools/#pdfid"&gt;PDFiD&lt;/a&gt;, &lt;a href="http://blog.didierstevens.com/programs/pdf-tools/#pdf-parser"&gt;pdf-parser&lt;/a&gt;, mPDF ve &lt;a href="http://blog.didierstevens.com/programs/pdf-tools/#make-pdf"&gt;make-pdf&lt;/a&gt; dahil)&lt;br /&gt;
&lt;a href="http://code.google.com/p/opaf/"&gt;Opaf&lt;/a&gt; - Open PDF Analysis Framework. PDF'i analiz edilip değiştirilebilen bir XML ağacına donuşturur.&lt;br /&gt;
&lt;a href="http://www.decalage.info/python/origapy"&gt;Origapy&lt;/a&gt; - PDF dosyalarını sanitze eden Origami Ruby modulu için Python wrapper&lt;br /&gt;
&lt;a href="http://pybrary.net/pyPdf/"&gt;pyPDF&lt;/a&gt; - python PDF toolkit. bilgi ayrıştırma, bolme, birleştirme, kesme, kriptolama ve dekriptolama...&lt;br /&gt;
&lt;a href="http://www.unixuser.org/%7Eeuske/python/pdfminer/index.html"&gt;PDFMiner&lt;/a&gt; - PDF dosyalardan text çıkarma&lt;br /&gt;
&lt;a href="http://code.google.com/p/python-poppler-qt4/"&gt;python-poppler-qt4&lt;/a&gt; - Poppler PDF kutuphanesi için Python bağlantısı , QT4 desteği dahil&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Genel&lt;/strong&gt;&lt;br /&gt;
&lt;a href="http://oss.coresecurity.com/projects/inlineegg.html"&gt;InlineEgg&lt;/a&gt; - Python'da kuçuk assembly programlar yazmak için sınıflar&lt;br /&gt;
&lt;a href="http://corelabs.coresecurity.com/index.php?module=Wiki&amp;amp;action=view&amp;amp;type=tool&amp;amp;name=Exomind"&gt;Exomind&lt;/a&gt; - sosyal ağ hizmetleri, arama motorları ve anlık mesajlaşma uzerine grafikler yaratmak ve açık kaynak intelligence modulleri ve fikirleri geliştirmek için&lt;br /&gt;
&lt;a href="http://www.securityfocus.com/tools/3851"&gt;RevHosts&lt;/a&gt; - Verilen IP adresi için sanal host'ları listeleme&lt;br /&gt;
&lt;a href="http://undefined.org/python/#simplejson"&gt;simplejson&lt;/a&gt; - JSON kodlayıcı/dekoder or. Google AJAX API&lt;br /&gt;
&lt;a href="http://dcortesi.com/2008/05/28/google-ajax-search-api-example-python-code/"&gt;PyMangle&lt;/a&gt; - diğer sızma testi araçlarıyla kullanmak için kelime listeleri yaratma komut satırı aracı ve python kutuphanesi&lt;br /&gt;
&lt;a href="https://bitbucket.org/haypo/hachoir/wiki/Home"&gt;Hachoir&lt;/a&gt; - Bir binary stream field'lerini goruntuleme ve duzenleme&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Diğer yararlı kutuphane ve araçlar&lt;/strong&gt;&lt;br /&gt;
&lt;a href="http://ipython.scipy.org/"&gt;IPython&lt;/a&gt; - Object introspection ve sistem shell erişimi için kendi ozel komut sistemi gibi çok sayıda ozelliğe sahip gelişmiş interaktif Python shell&lt;br /&gt;
&lt;a href="http://www.crummy.com/software/BeautifulSoup/"&gt;Beautiful Soup&lt;/a&gt; - ekrandan bilgi toplama için optimize HTML parser&lt;br /&gt;
&lt;a href="http://matplotlib.sourceforge.net/"&gt;matplotlib&lt;/a&gt; - array'ların 2D plot'larını yapmak için&lt;br /&gt;
&lt;a href="http://code.enthought.com/projects/mayavi/"&gt;Mayavi&lt;/a&gt; - 3 boyutlu bilimsel veri gorselleştirme ve plot&lt;br /&gt;
&lt;a href="http://www.secdev.org/projects/rtgraph3d/"&gt;RTGraph3D&lt;/a&gt; - 3B dinamik grafikler yaratma&lt;br /&gt;
&lt;a href="http://twistedmatrix.com/"&gt;Twisted&lt;/a&gt; - event-driven ağ motoru&lt;br /&gt;
&lt;a href="https://fedorahosted.org/suds/"&gt;Suds&lt;/a&gt; - Web hizmetleri için basit SOAP istemcisi&lt;br /&gt;
&lt;a href="http://chandlerproject.org/bin/view/Projects/MeTooCrypto"&gt;M2Crypto&lt;/a&gt; - OpenSSL wrapper&lt;br /&gt;
&lt;a href="http://networkx.lanl.gov/"&gt;NetworkX&lt;/a&gt; - grafik kutuphanesi (edge,node)&lt;br /&gt;
&lt;a href="http://pyparsing.wikispaces.com/"&gt;pyparsing&lt;/a&gt; - genel parse modulu&lt;br /&gt;
&lt;a href="http://codespeak.net/lxml/"&gt;lxml&lt;/a&gt; - Python dilinde XML ve HTML ile çalışmada en zengin ozelliklere sahip ve kullanımı en kolay kutuphane.&lt;br /&gt;
&lt;a href="http://www.noah.org/wiki/Pexpect"&gt;Pexpect&lt;/a&gt; - Diğer programları kontrol ve otomatikleştirme, Don Libes Expect sistemine benzer&lt;br /&gt;
&lt;a href="http://groups.csail.mit.edu/uid/sikuli/"&gt;Sikuli&lt;/a&gt; - GUI'leri ekran goruntuleri ile arama ve otomatikleştirme teknolojisi. &lt;a href="http://www.jython.org/"&gt;Jython&lt;/a&gt; script'ler ile kullanılabiliyor&lt;br /&gt;
&lt;a href="http://www.riverbankcomputing.co.uk/software/pyqt"&gt;PyQt&lt;/a&gt; ve &lt;a href="http://www.pyside.org/"&gt;PySide&lt;/a&gt; - Qt application framework ve GUI kutuphanesi için Python bağlantıları&lt;/p&gt;
&lt;p&gt;&lt;a href="http://dirk-loss.de/python-tools.htm"&gt;Kaynak&lt;/a&gt; &lt;a href="http://www.olympos.net/belgeler/urun/python/guvenlik-denetimi-yapanlar-icin-python-araclari-2851314.html"&gt;Turkçeleştirme&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">halit</dc:creator><pubDate>Fri, 17 Aug 2012 00:00:00 +0300</pubDate><guid>tag:www.halitalptekin.com,2012-08-17:guvenlik-ile-ilgili-python-araclari.html</guid><category>ceh</category><category>etik hacker</category><category>python</category><category>python araçları</category><category>reverse engineering</category><category>sistem güvenliği</category></item><item><title>Python Multithread Kullanımı Ve Dosya Arama</title><link>http://www.halitalptekin.com/python-multithread-kullanimi-ve-dosya-arama.html</link><description>&lt;p&gt;Python ve PyQt maceralarımın son programı olan Araci için yeni bil algoritma yazmayı duşunuyordum.Çunku ilk versiyonda sadece belirttiğim klasorun altındaki dosyaların içinde kelime arıyordu.Benim yapmak istediğim ise belirttiğim dizinin altındaki dosyaların içine bakması ve diğer dizinlerinde yolunu rekursif olarak tekrar kendisine gondermesini istiyordum.Bu mantık doğruydu ve çalışıyordu.Ancak çok yuksek dizin ve klasore sahip yerlerde python hata verip kapanıyordu.Bende bunu çozmek için guzel bir async arama classı yazdım.Şimdilik işimi goruyor.Belki ilerde yeniden geliştirebilirim.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AsyncArama&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;threading&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kelime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uzanti&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;threading&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yer&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kelime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kelime&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uzanti&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;uzanti&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bulunan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dosyalama&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uzanti&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;dosyalist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;kok&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;altdizinler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dosyalar&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;walk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;dosya&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dosyalar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;dosya&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uzanti&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                        &lt;span class="n"&gt;dosyalist&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kok&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;dosya&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;   
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dosyalist&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;aramayap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kelime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uzanti&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;dosyalar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dosyalama&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uzanti&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;dosya&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dosyalar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;satirlar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dosya&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;satir&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;satirlar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;satir&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kelime&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bulunan&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dosya&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bulunan&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dosya&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
                &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;pass&lt;/span&gt;                
        &lt;span class="n"&gt;aramayap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kelime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uzanti&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                        
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bulunan&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Bu kod uzerinden pythonda multi-thread mantığınıda gostermek istiyorum.Diğer dillere nazaran Python'da bu olay çok çok kolay.Öncelikle threading modulunu import ettikten sonra ondan yararlanarak bir class oluşturuyoruz.Daha sonra bu class içine arguman gondereceksek onlarıda kodda gorunduğu şekilde ayarlıyoruz.Daha sonra kullanırken bu şekilde arguman yollayacağız.init fonksiyonunda adı uzerine kurulum yapılıyor.Class'ın tumunde kullanacağımız değişkenkenleri tanımlıyoruz.&lt;/p&gt;
&lt;p&gt;Burada onemli olan run fonksiyonu.Çunku ilerde bu sınıfı kullanmak istediğimizde run fonksiyonu altındaki kodlar çalışacak.Ve daha sonra bu sınıfı kullanmak istediğimiz yere almaya geldi.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Araci v0.2" src="http://www.halitalptekin.com/media/upload/Araci_v0.2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Ben PyQt ile oluşturduğum Araci isimli programımda aşağıdaki gibi kullandım.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;aramath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AsyncArama&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;aramayeri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kelime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uzanti&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;aramath&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;aramath&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;               
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;sonuc&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;aramath&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listWidget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sonuc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listWidget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Bulunamadi!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Bu kodların Turkçe açıklaması şoyle.Aramayeri değişkenine belirttiğimiz yer ve onu tum alt dizinlerinde belirttiğiniz uzantıya sahip dosyalarda belirttiğiniz kelimeyi arıyor.Eğer buna uyanlar varsa geri donuş değeri olarak bu dosyaların konumunu bildiren bir liste geliyor.Bende bu gelen sonuclara gore listWidget'ıma bunları ekliyorum.Olay gayet basit.Python ve PyQt'de yazdığınız programlarda donma oluyorsa yukarıda kullandığım multi-thread mantığını sizde kullanın.Bu sayede hem gui ekranı donmuyor hemde işiniz çok daha hızlı bir şekilde yapılıyor.&lt;/p&gt;
&lt;p&gt;Videoda gorduğunuz gibi program işimi gorecek seviyeye geldi.Tum kaynak kodları için &lt;a href="https://github.com/halitalptekin/Araci"&gt;github&lt;/a&gt; depoma bakabilirsiniz.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">halit</dc:creator><pubDate>Thu, 16 Aug 2012 00:00:00 +0300</pubDate><guid>tag:www.halitalptekin.com,2012-08-16:python-multithread-kullanimi-ve-dosya-arama.html</guid><category>araci</category><category>pyqt</category><category>python</category><category>python multi thread</category><category>python thread kullanımı</category></item><item><title>Python Kütüphaneleri</title><link>http://www.halitalptekin.com/python-kutuphaneleri.html</link><description>&lt;p&gt;Her ne kadar çok buyuk bir Linux taraftarı hatta kullanıcısı olsam da hala laptopumu aldığımda içine yukledikleri Windows 7yi kullanıyorum.Tabiki gonlum surekli olarak Linuxu kurmaktan yana olsa da şartlar buna izin vermiyor.Malum kaldığım yurttaki internetin hızı 5-10kbs arasında olduğu için driver veya uygulama yuklemenin bana eziyet çektireceğini biliyorum.Bu yuzden tamamen Linuxa geçmek için evime gelmeyi bekledim.Bu sure zarfında tabiki de Python kullanmaktan vazgeçmedim.Hatta Python yanında Django ile de çok fazla ilgilendim.Tabi haliyle Windowsta Python kullanıyorsanız birçok problemle karşılaşmanız olası.Linux ortamında tek komutla yaptığın işler için çok fazla zaman harcıyorsunuz.&lt;/p&gt;
&lt;p&gt;Örneğin bir uygulama kurulumu için python setup.py install komutunu çalıştırdığınızda eğer uygulamanın ihtiyaç duyduğu kutuphane sistemde yoksa uyarı alırsınız.Birde onu ararsınız.Ama linux ortamında pip,easy_install,yum,apt-get gibi birçok yazılım ile çok kolay bir şekilde onlarıda kurarsınız.&lt;/p&gt;
&lt;p&gt;Ben bugun sizlere boyle durumlarda ilk gozattığım siteyi sizlere tanıtmak istiyorum.Çunku gerçekten benim çok işime yaradı.Başlarda çok fazla zaman harcarken daha sonraları sadece buraya girip site içinde arama yapmak yeterli oldu.Bu sitede Windows sistemler için 32 ve 64 bit derlenmiş python kutuphaneleri mevcut.Mimarinize ve python surumunuze uygun olanı seçip indirdikten sonra gayet kolay bir şekilde kurulum yapabiliyorsunuz.&lt;/p&gt;
&lt;p&gt;Şu anda sitede 182 adet kutuphane var.Surekli olarak guncellenmeye devam ediyor.Zaten aradığınızı bulmamak biraz zor.Sitede olanlar genelde hep kullanılan kutuphaneler.Ama gene de bazen aradığınızı bulamayabilirsiniz.O zamanda orjinal sitesine bakmakta fayda var.&lt;/p&gt;
&lt;p&gt;Sitede yer alan kutuphanelerin bazıları aşağıdadır.Siteye &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/"&gt;buradan&lt;/a&gt; girip daha fazlasına bakabilirsiniz.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#curses" title="Jun 02, 2012"&gt;curses&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pil" title="Jun 01, 2012"&gt;pil&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#videocapture" title="Jun 01, 2012"&gt;videocapture&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#tornado" title="Jun 01, 2012"&gt;tornado&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#bazaar" title="May 30, 2012"&gt;bazaar&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyopencl" title="May 30, 2012"&gt;pyopencl&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pycuda" title="May 30, 2012"&gt;pycuda&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#sfepy" title="May 29, 2012"&gt;sfepy&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyside" title="May 27, 2012"&gt;pyside&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#spyder" title="May 26, 2012"&gt;spyder&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#base" title="May 26, 2012"&gt;base&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#nlopt" title="May 24, 2012"&gt;nlopt&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#zope.interface" title="May 22, 2012"&gt;zope.interface&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#matplotlib" title="May 20, 2012"&gt;matplotlib&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#numpy" title="May 20, 2012"&gt;numpy&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#distribute" title="May 18, 2012"&gt;distribute&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#gdal" title="May 18, 2012"&gt;gdal&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyproj" title="May 18, 2012"&gt;pyproj&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pysfml2" title="May 18, 2012"&gt;pysfml2&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#basemap" title="May 18, 2012"&gt;basemap&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#ets" title="May 17, 2012"&gt;ets&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#casuarius" title="May 16, 2012"&gt;casuarius&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.audiolab" title="May 16, 2012"&gt;scikits.audiolab&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#nltk" title="May 15, 2012"&gt;nltk&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#nipy" title="May 13, 2012"&gt;nipy&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#jcc" title="May 12, 2012"&gt;jcc&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#netcdf4" title="May 11, 2012"&gt;netcdf4&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#psychopy" title="May 11, 2012"&gt;psychopy&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#slycot" title="May 10, 2012"&gt;slycot&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyglet" title="May 10, 2012"&gt;pyglet&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml" title="May 09, 2012"&gt;lxml&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymvpa" title="May 08, 2012"&gt;pymvpa&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#imread" title="May 08, 2012"&gt;imread&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#ndimage" title="May 08, 2012"&gt;ndimage&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#nose" title="May 07, 2012"&gt;nose&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikit-learn" title="May 07, 2012"&gt;scikit-learn&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymc" title="May 07, 2012"&gt;pymc&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#mahotas" title="May 07, 2012"&gt;mahotas&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#nibabel" title="May 06, 2012"&gt;nibabel&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi" title="May 06, 2012"&gt;mod_wsgi&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#mercurial" title="May 06, 2012"&gt;mercurial&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#sqlalchemy" title="May 06, 2012"&gt;sqlalchemy&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymol" title="May 05, 2012"&gt;pymol&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#opencv" title="May 04, 2012"&gt;opencv&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#scitools" title="May 04, 2012"&gt;scitools&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#scientificpython" title="May 04, 2012"&gt;scientificpython&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pylzma" title="May 01, 2012"&gt;pylzma&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyzmq" title="May 01, 2012"&gt;pyzmq&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyopengl" title="Apr 28, 2012"&gt;pyopengl&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#vlfd" title="Apr 28, 2012"&gt;vlfd&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#statsmodels" title="Apr 26, 2012"&gt;statsmodels&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#mxbase" title="Apr 25, 2012"&gt;mxbase&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#visvis" title="Apr 24, 2012"&gt;visvis&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#ipython" title="Apr 22, 2012"&gt;ipython&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#cython" title="Apr 21, 2012"&gt;cython&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyodbc" title="Apr 17, 2012"&gt;pyodbc&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyopengl-accelerate" title="Apr 14, 2012"&gt;pyopengl-accelerate&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pandas" title="Apr 12, 2012"&gt;pandas&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#libsbml" title="Apr 12, 2012"&gt;libsbml&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#gevent" title="Apr 11, 2012"&gt;gevent&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyfits" title="Apr 10, 2012"&gt;pyfits&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#veusz" title="Apr 04, 2012"&gt;veusz&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#bitarray" title="Apr 04, 2012"&gt;bitarray&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#kivy" title="Apr 03, 2012"&gt;kivy&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#libsvm" title="Apr 02, 2012"&gt;libsvm&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyamg" title="Apr 02, 2012"&gt;pyamg&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#oursql" title="Apr 01, 2012"&gt;oursql&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#cvxopt" title="Mar 30, 2012"&gt;cvxopt&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#psycopg" title="Mar 29, 2012"&gt;psycopg&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#fipy" title="Mar 28, 2012"&gt;fipy&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#django" title="Mar 24, 2012"&gt;django&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pygame" title="Mar 19, 2012"&gt;pygame&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#python-ldap" title="Mar 14, 2012"&gt;python-ldap&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#quantlib" title="Mar 11, 2012"&gt;quantlib&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#sphinx" title="Mar 10, 2012"&gt;sphinx&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#cellprofiler" title="Mar 05, 2012"&gt;cellprofiler&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymssql" title="Feb 29, 2012"&gt;pymssql&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#orange" title="Feb 29, 2012"&gt;orange&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#scipy" title="Feb 28, 2012"&gt;scipy&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits-image" title="Feb 27, 2012"&gt;scikits-image&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#biopython" title="Feb 24, 2012"&gt;biopython&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#theano" title="Feb 23, 2012"&gt;theano&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#libtfr" title="Feb 18, 2012"&gt;libtfr&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#py2exe" title="Feb 18, 2012"&gt;py2exe&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#virtualenv" title="Feb 18, 2012"&gt;virtualenv&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pip" title="Feb 16, 2012"&gt;pip&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#assimulo" title="Feb 14, 2012"&gt;assimulo&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pywin32" title="Feb 14, 2012"&gt;pywin32&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#greenlet" title="Feb 11, 2012"&gt;greenlet&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted" title="Feb 11, 2012"&gt;twisted&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#simpleitk" title="Feb 08, 2012"&gt;simpleitk&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.odes" title="Jan 28, 2012"&gt;scikits.odes&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#liblas" title="Jan 26, 2012"&gt;liblas&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#shapely" title="Jan 24, 2012"&gt;shapely&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#mpi4py" title="Jan 20, 2012"&gt;mpi4py&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pgmagick" title="Jan 20, 2012"&gt;pgmagick&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pysqlite" title="Jan 20, 2012"&gt;pysqlite&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#meshpy" title="Jan 18, 2012"&gt;meshpy&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#cgal-python" title="Jan 18, 2012"&gt;cgal-python&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#gmpy" title="Jan 18, 2012"&gt;gmpy&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymedia" title="Jan 17, 2012"&gt;pymedia&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pycairo" title="Jan 17, 2012"&gt;pycairo&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#vigra" title="Jan 17, 2012"&gt;vigra&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pylibtiff" title="Jan 17, 2012"&gt;pylibtiff&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#milk" title="Jan 16, 2012"&gt;milk&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#cellcognition" title="Jan 15, 2012"&gt;cellcognition&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#boost.python" title="Jan 15, 2012"&gt;boost.python&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pytables" title="Jan 15, 2012"&gt;pytables&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#h5py" title="Jan 15, 2012"&gt;h5py&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pycurl" title="Jan 14, 2012"&gt;pycurl&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#numexpr" title="Jan 08, 2012"&gt;numexpr&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#ffnet" title="Jan 07, 2012"&gt;ffnet&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pywcs" title="Jan 05, 2012"&gt;pywcs&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#guiqwt" title="Jan 02, 2012"&gt;guiqwt&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyfftw" title="Dec 31, 2011"&gt;pyfftw&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#libxml-python" title="Dec 30, 2011"&gt;libxml-python&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyephem" title="Dec 23, 2011"&gt;pyephem&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#psutil" title="Dec 14, 2011"&gt;psutil&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyfltk" title="Dec 02, 2011"&gt;pyfltk&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#thrift" title="Nov 30, 2011"&gt;thrift&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymex" title="Nov 22, 2011"&gt;pymex&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymatlab" title="Nov 22, 2011"&gt;pymatlab&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#networkx" title="Nov 22, 2011"&gt;networkx&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#mmtk" title="Nov 21, 2011"&gt;mmtk&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#zodb3" title="Nov 19, 2011"&gt;zodb3&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#mmlib" title="Nov 15, 2011"&gt;mmlib&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pygtk" title="Nov 09, 2011"&gt;pygtk&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pywavelets" title="Nov 07, 2011"&gt;pywavelets&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyicu" title="Nov 04, 2011"&gt;pyicu&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyserial" title="Nov 02, 2011"&gt;pyserial&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#mdp" title="Nov 01, 2011"&gt;mdp&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#sympy" title="Nov 01, 2011"&gt;sympy&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#babel" title="Nov 01, 2011"&gt;babel&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyqwt" title="Nov 01, 2011"&gt;pyqwt&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#qimage2ndarray" title="Nov 01, 2011"&gt;qimage2ndarray&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyqt" title="Nov 01, 2011"&gt;pyqt&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.scattpy" title="Oct 12, 2011"&gt;scikits.scattpy&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyreadline" title="Oct 06, 2011"&gt;pyreadline&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#cgkit" title="Oct 02, 2011"&gt;cgkit&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymix" title="Sep 29, 2011"&gt;pymix&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.vectorplot" title="Sep 29, 2011"&gt;scikits.vectorplot&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.ann" title="Sep 29, 2011"&gt;scikits.ann&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.delaunay" title="Sep 28, 2011"&gt;scikits.delaunay&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#natgrid" title="Sep 28, 2011"&gt;natgrid&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#numeric" title="Sep 07, 2011"&gt;numeric&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pulp" title="Sep 06, 2011"&gt;pulp&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#nmoldyn" title="Sep 06, 2011"&gt;nmoldyn&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#vtk" title="Sep 04, 2011"&gt;vtk&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymutt" title="Sep 01, 2011"&gt;pymutt&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyminuit" title="Aug 31, 2011"&gt;pyminuit&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#iocbio" title="Aug 16, 2011"&gt;iocbio&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#python-sundials" title="Aug 16, 2011"&gt;python-sundials&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pythonmagick" title="Aug 12, 2011"&gt;pythonmagick&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#smc.freeimage" title="Aug 08, 2011"&gt;smc.freeimage&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#jpype" title="Jul 28, 2011"&gt;jpype&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#wxpython" title="Jul 26, 2011"&gt;wxpython&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pybox2d" title="Jul 22, 2011"&gt;pybox2d&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyhdf" title="Jul 17, 2011"&gt;pyhdf&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.umfpack" title="Jul 13, 2011"&gt;scikits.umfpack&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#openexr" title="Jul 09, 2011"&gt;openexr&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#ilastik" title="Jul 01, 2011"&gt;ilastik&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#dipy" title="Jun 24, 2011"&gt;dipy&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#bottleneck" title="Jun 13, 2011"&gt;bottleneck&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#python-igraph" title="Jun 10, 2011"&gt;python-igraph&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pycogent" title="Jun 07, 2011"&gt;pycogent&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyyaml" title="May 30, 2011"&gt;pyyaml&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pysparse" title="May 27, 2011"&gt;pysparse&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#mmseg" title="May 23, 2011"&gt;mmseg&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pynifti" title="May 20, 2011"&gt;pynifti&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.samplerate" title="May 06, 2011"&gt;scikits.samplerate&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.timeseries" title="Apr 02, 2011"&gt;scikits.timeseries&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#cx_freeze" title="Mar 20, 2011"&gt;cx_freeze&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#vitables" title="Feb 21, 2011"&gt;vitables&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#quickfix" title="Feb 19, 2011"&gt;quickfix&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyode" title="Feb 13, 2011"&gt;pyode&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#numscons" title="Jan 29, 2011"&gt;numscons&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#twainmodule" title="Jan 02, 2011"&gt;twainmodule&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyaudio" title="Dec 06, 2010"&gt;pyaudio&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#mysql-python" title="Dec 06, 2010"&gt;mysql-python&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#vc.crt" title="Dec 05, 2010"&gt;vc.crt&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#reportlab" title="Oct 01, 2010"&gt;reportlab&lt;/a&gt; &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#visionegg" title="Sep 11, 2010"&gt;visionegg&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">halit</dc:creator><pubDate>Sun, 03 Jun 2012 00:00:00 +0300</pubDate><guid>tag:www.halitalptekin.com,2012-06-03:python-kutuphaneleri.html</guid><category>python</category><category>python kütüphaneleri</category><category>python libs</category><category>windows python</category></item></channel></rss>